versions pytest-8.3.5, python-3.9.6.final.0
invocation_dir=/Users/maxsocha/Documents/Personal Projects/CGT Calculator
cwd=/Users/maxsocha/Documents/Personal Projects/CGT Calculator
args=('-s', 'test/test_cgt_calculator.py', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x1057dafd0>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x1057dafd0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x1058f0610>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x1058f0400>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x10498ca60>
          plugin_name: 4372089440
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x1057dafd0>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/anyio/pytest_plugin.py'>
          plugin_name: anyio
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='no' _global_capturing=<MultiCapture out=None err=None in_=None _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x1058f0610>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x1058f0400>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x1058f0bb0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x105901f70>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x10498ca60>
          plugin_name: 4372089440
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x1057dafd0>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/anyio/pytest_plugin.py'>
          plugin_name: anyio
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='no' _global_capturing=<MultiCapture out=None err=None in_=None _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x1058f0610>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x1058f0400>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x1058f0bb0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x105901f70>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x105919220>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x10498ca60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x1057dafd0>
          start_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator
          startdir: /Users/maxsocha/Documents/Personal Projects/CGT Calculator
      early skip of rewriting module: email.parser [assertion]
      early skip of rewriting module: email.feedparser [assertion]
      early skip of rewriting module: email.errors [assertion]
      early skip of rewriting module: email._policybase [assertion]
      early skip of rewriting module: email.header [assertion]
      early skip of rewriting module: email.quoprimime [assertion]
      early skip of rewriting module: email.base64mime [assertion]
      early skip of rewriting module: email.charset [assertion]
      early skip of rewriting module: email.encoders [assertion]
      early skip of rewriting module: quopri [assertion]
      early skip of rewriting module: email.utils [assertion]
      early skip of rewriting module: email._parseaddr [assertion]
      early skip of rewriting module: calendar [assertion]
      early skip of rewriting module: email.message [assertion]
      early skip of rewriting module: uu [assertion]
      early skip of rewriting module: email._encoded_words [assertion]
      early skip of rewriting module: email.iterators [assertion]
      finish pytest_report_header --> [['rootdir: /Users/maxsocha/Documents/Personal Projects/CGT Calculator', 'plugins: anyio-4.3.0'], ['using: pytest-8.3.5', 'registered third-party plugins:', '  anyio-4.3.0 at /Users/maxsocha/Library/Python/3.9/lib/python/site-packages/anyio/pytest_plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['test/test_cgt_calculator.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=PosixPath('/Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/test_cgt_calculator.py'), parts=[], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Dir CGT Calculator> [hook]
            pytest_collectstart [hook]
                collector: <Dir CGT Calculator>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir CGT Calculator>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/.env
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/.env
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir CGT Calculator>
                  file_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/.env
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/.env
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/.git
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/.git
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/.gitignore
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/.gitignore
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir CGT Calculator>
                  file_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/.gitignore
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/.gitignore
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/.pytest_cache
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/.pytest_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/capital_gains_report.xlsx
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/capital_gains_report.xlsx
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir CGT Calculator>
                  file_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/capital_gains_report.xlsx
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/capital_gains_report.xlsx
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/capital_gains_report_max.xlsx
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/capital_gains_report_max.xlsx
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir CGT Calculator>
                  file_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/capital_gains_report_max.xlsx
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/capital_gains_report_max.xlsx
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/deprecated_functions.py
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/deprecated_functions.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir CGT Calculator>
                  file_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/deprecated_functions.py
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/deprecated_functions.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/pytestdebug.log
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/pytestdebug.log
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir CGT Calculator>
                  file_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/pytestdebug.log
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/pytestdebug.log
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/src
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/src
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/src
                  parent: <Dir CGT Calculator>
              finish pytest_collect_directory --> <Package src> [hook]
              pytest_collect_directory [hook]
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test
                  parent: <Dir CGT Calculator>
              finish pytest_collect_directory --> <Dir test> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/trade_history.csv
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/trade_history.csv
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir CGT Calculator>
                  file_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/trade_history.csv
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/trade_history.csv
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/trade_history_alex.csv
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/trade_history_alex.csv
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir CGT Calculator>
                  file_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/trade_history_alex.csv
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/trade_history_alex.csv
              finish pytest_collect_file --> [] [hook]
            finish pytest_make_collect_report --> <CollectReport '.' lenresult=2 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Dir test>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir test>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/.pytest_cache
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/.pytest_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/mock_cgt_calculator.py
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/mock_cgt_calculator.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir test>
                  file_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/mock_cgt_calculator.py
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/mock_cgt_calculator.py
              finish pytest_collect_file --> [] [hook]
              pytest_collect_file [hook]
                  parent: <Dir test>
                  file_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/test_cgt_calculator.py
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/test_cgt_calculator.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir test>
                    module_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/test_cgt_calculator.py
                    path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/test_cgt_calculator.py
                finish pytest_pycollect_makemodule --> <Module test_cgt_calculator.py> [hook]
              finish pytest_collect_file --> [<Module test_cgt_calculator.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x1057dafd0>
                  collection_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/trade_history_test.csv
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/trade_history_test.csv
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir test>
                  file_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/trade_history_test.csv
                  path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/trade_history_test.csv
              finish pytest_collect_file --> [] [hook]
            finish pytest_make_collect_report --> <CollectReport 'test' lenresult=1 outcome='passed'> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module test_cgt_calculator.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_cgt_calculator.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_cgt_calculator.py>
      find_module called for: test_cgt_calculator [assertion]
      matched test file (was specified on cmdline): '/Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/test_cgt_calculator.py' [assertion]
      _read_pyc(/Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/test_cgt_calculator.py): out of date [assertion]
      rewriting PosixPath('/Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/test_cgt_calculator.py') [assertion]
      early skip of rewriting module: numpy [assertion]
      early skip of rewriting module: numpy._globals [assertion]
      early skip of rewriting module: numpy._utils [assertion]
      early skip of rewriting module: numpy._utils._convertions [assertion]
      early skip of rewriting module: numpy._expired_attrs_2_0 [assertion]
      early skip of rewriting module: numpy.version [assertion]
      early skip of rewriting module: numpy._distributor_init [assertion]
      early skip of rewriting module: numpy._distributor_init_local [assertion]
      early skip of rewriting module: numpy.__config__ [assertion]
      early skip of rewriting module: numpy._core [assertion]
      early skip of rewriting module: numpy._core.multiarray [assertion]
      early skip of rewriting module: numpy._core.overrides [assertion]
      early skip of rewriting module: numpy._utils._inspect [assertion]
      early skip of rewriting module: numpy._core._multiarray_umath [assertion]
      early skip of rewriting module: numpy.exceptions [assertion]
      early skip of rewriting module: numpy._core._exceptions [assertion]
      early skip of rewriting module: numpy.dtypes [assertion]
      early skip of rewriting module: numpy._core.umath [assertion]
      early skip of rewriting module: numpy._core.numerictypes [assertion]
      early skip of rewriting module: numpy._core._string_helpers [assertion]
      early skip of rewriting module: numpy._core._type_aliases [assertion]
      early skip of rewriting module: numpy._core._dtype [assertion]
      early skip of rewriting module: numpy._core.numeric [assertion]
      early skip of rewriting module: numpy._core.shape_base [assertion]
      early skip of rewriting module: numpy._core.fromnumeric [assertion]
      early skip of rewriting module: numpy._core._methods [assertion]
      early skip of rewriting module: pickle [assertion]
      early skip of rewriting module: _compat_pickle [assertion]
      early skip of rewriting module: _pickle [assertion]
      early skip of rewriting module: org [assertion]
      early skip of rewriting module: numpy._core._ufunc_config [assertion]
      early skip of rewriting module: numpy._core.arrayprint [assertion]
      early skip of rewriting module: numpy._core._asarray [assertion]
      early skip of rewriting module: numpy._core.records [assertion]
      early skip of rewriting module: numpy._core.memmap [assertion]
      early skip of rewriting module: numpy._core.function_base [assertion]
      early skip of rewriting module: numpy._core._machar [assertion]
      early skip of rewriting module: numpy._core.getlimits [assertion]
      early skip of rewriting module: numpy._core.einsumfunc [assertion]
      early skip of rewriting module: numpy._core._add_newdocs [assertion]
      early skip of rewriting module: numpy._core._multiarray_tests [assertion]
      early skip of rewriting module: numpy._core._add_newdocs_scalars [assertion]
      early skip of rewriting module: numpy._core._dtype_ctypes [assertion]
      early skip of rewriting module: numpy._core._internal [assertion]
      early skip of rewriting module: ctypes [assertion]
      early skip of rewriting module: _ctypes [assertion]
      early skip of rewriting module: ctypes._endian [assertion]
      early skip of rewriting module: numpy._pytesttester [assertion]
      early skip of rewriting module: numpy.lib [assertion]
      early skip of rewriting module: numpy.lib.array_utils [assertion]
      early skip of rewriting module: numpy.lib._array_utils_impl [assertion]
      early skip of rewriting module: numpy.lib.introspect [assertion]
      early skip of rewriting module: numpy.lib.mixins [assertion]
      early skip of rewriting module: numpy.lib.npyio [assertion]
      early skip of rewriting module: numpy.lib._npyio_impl [assertion]
      early skip of rewriting module: numpy.lib.format [assertion]
      early skip of rewriting module: numpy.lib._utils_impl [assertion]
      early skip of rewriting module: numpy.lib._datasource [assertion]
      early skip of rewriting module: numpy.lib._iotools [assertion]
      early skip of rewriting module: numpy.lib.scimath [assertion]
      early skip of rewriting module: numpy.lib._scimath_impl [assertion]
      early skip of rewriting module: numpy.lib._type_check_impl [assertion]
      early skip of rewriting module: numpy.lib._ufunclike_impl [assertion]
      early skip of rewriting module: numpy.lib.stride_tricks [assertion]
      early skip of rewriting module: numpy.lib._stride_tricks_impl [assertion]
      early skip of rewriting module: numpy.lib._index_tricks_impl [assertion]
      early skip of rewriting module: numpy.matrixlib [assertion]
      early skip of rewriting module: numpy.matrixlib.defmatrix [assertion]
      early skip of rewriting module: numpy.linalg [assertion]
      early skip of rewriting module: numpy.linalg.linalg [assertion]
      early skip of rewriting module: numpy.linalg._linalg [assertion]
      early skip of rewriting module: numpy.lib._twodim_base_impl [assertion]
      early skip of rewriting module: numpy.linalg._umath_linalg [assertion]
      early skip of rewriting module: numpy._typing [assertion]
      early skip of rewriting module: numpy._typing._nested_sequence [assertion]
      early skip of rewriting module: numpy._typing._nbit [assertion]
      early skip of rewriting module: numpy._typing._char_codes [assertion]
      early skip of rewriting module: numpy._typing._scalars [assertion]
      early skip of rewriting module: numpy._typing._shape [assertion]
      early skip of rewriting module: numpy._typing._dtype_like [assertion]
      early skip of rewriting module: numpy._typing._array_like [assertion]
      early skip of rewriting module: numpy.lib._function_base_impl [assertion]
      early skip of rewriting module: numpy.lib._histograms_impl [assertion]
      early skip of rewriting module: numpy.lib._nanfunctions_impl [assertion]
      early skip of rewriting module: numpy.lib._shape_base_impl [assertion]
      early skip of rewriting module: numpy.lib._arraysetops_impl [assertion]
      early skip of rewriting module: numpy.lib._polynomial_impl [assertion]
      early skip of rewriting module: numpy.lib._arrayterator_impl [assertion]
      early skip of rewriting module: numpy.lib._arraypad_impl [assertion]
      early skip of rewriting module: numpy.lib._version [assertion]
      early skip of rewriting module: pandas [assertion]
      early skip of rewriting module: pytz [assertion]
      early skip of rewriting module: pytz.exceptions [assertion]
      early skip of rewriting module: pytz.lazy [assertion]
      early skip of rewriting module: pytz.tzinfo [assertion]
      early skip of rewriting module: pytz.tzfile [assertion]
      early skip of rewriting module: dateutil [assertion]
      early skip of rewriting module: dateutil._version [assertion]
      early skip of rewriting module: pandas.compat [assertion]
      early skip of rewriting module: pandas.compat._constants [assertion]
      early skip of rewriting module: sysconfig [assertion]
      early skip of rewriting module: _sysconfigdata__darwin_darwin [assertion]
      early skip of rewriting module: _osx_support [assertion]
      early skip of rewriting module: pandas.compat.compressors [assertion]
      early skip of rewriting module: pandas.compat.numpy [assertion]
      early skip of rewriting module: pandas.util [assertion]
      early skip of rewriting module: pandas.util.version [assertion]
      early skip of rewriting module: pandas.compat.pyarrow [assertion]
      early skip of rewriting module: pyarrow [assertion]
      early skip of rewriting module: pandas._config [assertion]
      early skip of rewriting module: pandas._config.config [assertion]
      early skip of rewriting module: pandas._typing [assertion]
      early skip of rewriting module: numpy.random [assertion]
      early skip of rewriting module: numpy.random._pickle [assertion]
      early skip of rewriting module: numpy.random.bit_generator [assertion]
      early skip of rewriting module: numpy.random._common [assertion]
      early skip of rewriting module: backports_abc [assertion]
      early skip of rewriting module: secrets [assertion]
      early skip of rewriting module: hmac [assertion]
      early skip of rewriting module: _hashlib [assertion]
      early skip of rewriting module: hashlib [assertion]
      early skip of rewriting module: _blake2 [assertion]
      early skip of rewriting module: _sha3 [assertion]
      early skip of rewriting module: numpy.random.mtrand [assertion]
      early skip of rewriting module: numpy.random._bounded_integers [assertion]
      early skip of rewriting module: numpy.random._mt19937 [assertion]
      early skip of rewriting module: numpy.random._philox [assertion]
      early skip of rewriting module: numpy.random._pcg64 [assertion]
      early skip of rewriting module: numpy.random._sfc64 [assertion]
      early skip of rewriting module: numpy.random._generator [assertion]
      early skip of rewriting module: pandas.util._exceptions [assertion]
      early skip of rewriting module: pandas._config.dates [assertion]
      early skip of rewriting module: pandas._config.display [assertion]
      early skip of rewriting module: pandas.core [assertion]
      early skip of rewriting module: pandas.core.config_init [assertion]
      early skip of rewriting module: pandas.core.api [assertion]
      early skip of rewriting module: pandas._libs [assertion]
      early skip of rewriting module: pandas._libs.pandas_parser [assertion]
      early skip of rewriting module: pandas._libs.pandas_datetime [assertion]
      early skip of rewriting module: pandas._libs.interval [assertion]
      early skip of rewriting module: pandas._libs.hashtable [assertion]
      early skip of rewriting module: pandas._libs.missing [assertion]
      early skip of rewriting module: pandas._libs.tslibs [assertion]
      early skip of rewriting module: pandas._libs.tslibs.dtypes [assertion]
      early skip of rewriting module: pandas._libs.tslibs.ccalendar [assertion]
      early skip of rewriting module: pandas._libs.tslibs.np_datetime [assertion]
      early skip of rewriting module: pandas._libs.tslibs.conversion [assertion]
      early skip of rewriting module: pandas._libs.tslibs.base [assertion]
      early skip of rewriting module: pandas._libs.tslibs.offsets [assertion]
      early skip of rewriting module: pandas._libs.tslibs.timestamps [assertion]
      early skip of rewriting module: pandas._libs.tslibs.nattype [assertion]
      early skip of rewriting module: pandas._libs.tslibs.timedeltas [assertion]
      early skip of rewriting module: pandas._libs.tslibs.timezones [assertion]
      early skip of rewriting module: pandas.compat._optional [assertion]
      early skip of rewriting module: zoneinfo [assertion]
      early skip of rewriting module: zoneinfo._tzpath [assertion]
      early skip of rewriting module: zoneinfo._common [assertion]
      early skip of rewriting module: _zoneinfo [assertion]
      early skip of rewriting module: dateutil.tz [assertion]
      early skip of rewriting module: dateutil.tz.tz [assertion]
      early skip of rewriting module: six [assertion]
      early skip of rewriting module: six.moves [assertion]
      early skip of rewriting module: dateutil.tz._common [assertion]
      early skip of rewriting module: dateutil.tz._factories [assertion]
      early skip of rewriting module: dateutil.tz.win [assertion]
      early skip of rewriting module: six.moves.winreg [assertion]
      early skip of rewriting module: pandas._libs.tslibs.fields [assertion]
      early skip of rewriting module: _strptime [assertion]
      early skip of rewriting module: pandas._config.localization [assertion]
      early skip of rewriting module: pandas._libs.tslibs.tzconversion [assertion]
      early skip of rewriting module: pandas._libs.properties [assertion]
      early skip of rewriting module: pandas._libs.tslibs.parsing [assertion]
      early skip of rewriting module: dateutil.parser [assertion]
      early skip of rewriting module: dateutil.parser._parser [assertion]
      early skip of rewriting module: dateutil.relativedelta [assertion]
      early skip of rewriting module: dateutil._common [assertion]
      early skip of rewriting module: dateutil.parser.isoparser [assertion]
      early skip of rewriting module: pandas._libs.tslibs.strptime [assertion]
      early skip of rewriting module: pandas._libs.tslibs.period [assertion]
      early skip of rewriting module: pandas._libs.tslibs.vectorized [assertion]
      early skip of rewriting module: pandas._libs.ops_dispatch [assertion]
      early skip of rewriting module: pandas._libs.algos [assertion]
      early skip of rewriting module: pandas.core.dtypes [assertion]
      early skip of rewriting module: pandas.core.dtypes.dtypes [assertion]
      early skip of rewriting module: pandas._libs.lib [assertion]
      early skip of rewriting module: pyarrow [assertion]
      early skip of rewriting module: pandas.errors [assertion]
      early skip of rewriting module: pandas.core.dtypes.base [assertion]
      early skip of rewriting module: pandas.core.dtypes.generic [assertion]
      early skip of rewriting module: pandas.core.dtypes.inference [assertion]
      early skip of rewriting module: pandas.core.dtypes.missing [assertion]
      early skip of rewriting module: pandas.core.dtypes.common [assertion]
      early skip of rewriting module: pandas.core.algorithms [assertion]
      early skip of rewriting module: pandas.util._decorators [assertion]
      early skip of rewriting module: pandas.core.dtypes.cast [assertion]
      early skip of rewriting module: pandas.io [assertion]
      early skip of rewriting module: pandas.io._util [assertion]
      early skip of rewriting module: pandas.core.dtypes.concat [assertion]
      early skip of rewriting module: pandas.core.dtypes.astype [assertion]
      early skip of rewriting module: pandas.core.array_algos [assertion]
      early skip of rewriting module: pandas.core.array_algos.take [assertion]
      early skip of rewriting module: pandas.core.construction [assertion]
      early skip of rewriting module: numpy.ma [assertion]
      early skip of rewriting module: numpy.ma.core [assertion]
      early skip of rewriting module: numpy.ma.extras [assertion]
      early skip of rewriting module: pandas.core.common [assertion]
      early skip of rewriting module: pandas.core.indexers [assertion]
      early skip of rewriting module: pandas.core.indexers.utils [assertion]
      early skip of rewriting module: pandas.core.arrays [assertion]
      early skip of rewriting module: pandas.core.arrays.arrow [assertion]
      early skip of rewriting module: pandas.core.arrays.arrow.accessors [assertion]
      early skip of rewriting module: pandas.core.arrays.arrow.array [assertion]
      early skip of rewriting module: pandas.util._validators [assertion]
      early skip of rewriting module: pandas.core.missing [assertion]
      early skip of rewriting module: pandas.core.ops [assertion]
      early skip of rewriting module: pandas.core.ops.array_ops [assertion]
      early skip of rewriting module: pandas._libs.ops [assertion]
      early skip of rewriting module: pandas.core.roperator [assertion]
      early skip of rewriting module: pandas.core.computation [assertion]
      early skip of rewriting module: pandas.core.computation.expressions [assertion]
      early skip of rewriting module: pandas.core.computation.check [assertion]
      early skip of rewriting module: numexpr [assertion]
      early skip of rewriting module: pandas.core.ops.missing [assertion]
      early skip of rewriting module: pandas.core.ops.dispatch [assertion]
      early skip of rewriting module: pandas.core.ops.invalid [assertion]
      early skip of rewriting module: pandas.core.ops.common [assertion]
      early skip of rewriting module: pandas.core.ops.docstrings [assertion]
      early skip of rewriting module: pandas.core.ops.mask_ops [assertion]
      early skip of rewriting module: pandas.core.arraylike [assertion]
      early skip of rewriting module: pandas.core.arrays._arrow_string_mixins [assertion]
      early skip of rewriting module: pandas.core.arrays._utils [assertion]
      early skip of rewriting module: pandas.core.arrays.base [assertion]
      early skip of rewriting module: pandas.compat.numpy.function [assertion]
      early skip of rewriting module: pandas.core.array_algos.quantile [assertion]
      early skip of rewriting module: pandas.core.sorting [assertion]
      early skip of rewriting module: pandas.core.arrays.masked [assertion]
      early skip of rewriting module: pandas.core.nanops [assertion]
      early skip of rewriting module: bottleneck [assertion]
      early skip of rewriting module: pandas.core.array_algos.masked_accumulations [assertion]
      early skip of rewriting module: pandas.core.array_algos.masked_reductions [assertion]
      early skip of rewriting module: pandas.core.util [assertion]
      early skip of rewriting module: pandas.core.util.hashing [assertion]
      early skip of rewriting module: pandas._libs.hashing [assertion]
      early skip of rewriting module: pandas.core.arrays.string_ [assertion]
      early skip of rewriting module: pandas._libs.arrays [assertion]
      early skip of rewriting module: pandas.core.arrays.floating [assertion]
      early skip of rewriting module: pandas.core.arrays.numeric [assertion]
      early skip of rewriting module: pandas.core.arrays.integer [assertion]
      early skip of rewriting module: pandas.core.arrays.numpy_ [assertion]
      early skip of rewriting module: pandas.core.arrays._mixins [assertion]
      early skip of rewriting module: pandas.core.array_algos.transforms [assertion]
      early skip of rewriting module: pandas.core.strings [assertion]
      early skip of rewriting module: pandas.core.strings.object_array [assertion]
      early skip of rewriting module: pandas.core.strings.base [assertion]
      early skip of rewriting module: pandas.io.formats [assertion]
      early skip of rewriting module: pandas.io.formats.printing [assertion]
      early skip of rewriting module: pandas.io.formats.console [assertion]
      early skip of rewriting module: pandas.tseries [assertion]
      early skip of rewriting module: pandas.tseries.frequencies [assertion]
      early skip of rewriting module: pandas.core.arrays.boolean [assertion]
      early skip of rewriting module: pandas.core.arrays.categorical [assertion]
      early skip of rewriting module: pandas.core.accessor [assertion]
      early skip of rewriting module: pandas.core.base [assertion]
      early skip of rewriting module: pandas.core.arrays.datetimes [assertion]
      early skip of rewriting module: pandas._libs.tslib [assertion]
      early skip of rewriting module: pandas.core.arrays.datetimelike [assertion]
      early skip of rewriting module: pandas.core.array_algos.datetimelike_accumulations [assertion]
      early skip of rewriting module: pandas.core.arrays._ranges [assertion]
      early skip of rewriting module: pandas.tseries.offsets [assertion]
      early skip of rewriting module: pandas.core.arrays.interval [assertion]
      early skip of rewriting module: pandas.core.arrays.timedeltas [assertion]
      early skip of rewriting module: pandas.core.arrays.period [assertion]
      early skip of rewriting module: pandas.core.arrays.sparse [assertion]
      early skip of rewriting module: pandas.core.arrays.sparse.accessor [assertion]
      early skip of rewriting module: pandas.core.arrays.sparse.array [assertion]
      early skip of rewriting module: pandas._libs.sparse [assertion]
      early skip of rewriting module: pandas.core.arrays.string_arrow [assertion]
      early skip of rewriting module: pandas.core.flags [assertion]
      early skip of rewriting module: pandas.core.groupby [assertion]
      early skip of rewriting module: pandas.core.groupby.generic [assertion]
      early skip of rewriting module: pandas.core.apply [assertion]
      early skip of rewriting module: pandas._libs.internals [assertion]
      early skip of rewriting module: pandas.core._numba [assertion]
      early skip of rewriting module: pandas.core._numba.executor [assertion]
      early skip of rewriting module: pandas.core.frame [assertion]
      early skip of rewriting module: pandas.core.generic [assertion]
      early skip of rewriting module: pandas.core.indexing [assertion]
      early skip of rewriting module: pandas._libs.indexing [assertion]
      early skip of rewriting module: pandas.core.indexes [assertion]
      early skip of rewriting module: pandas.core.indexes.api [assertion]
      early skip of rewriting module: pandas.core.indexes.base [assertion]
      early skip of rewriting module: pandas._libs.index [assertion]
      early skip of rewriting module: pandas._libs.writers [assertion]
      early skip of rewriting module: pandas._libs.join [assertion]
      early skip of rewriting module: pandas.core.array_algos.putmask [assertion]
      early skip of rewriting module: pandas.core.indexes.frozen [assertion]
      early skip of rewriting module: pandas.core.strings.accessor [assertion]
      early skip of rewriting module: pandas.core.indexes.category [assertion]
      early skip of rewriting module: pandas.core.indexes.extension [assertion]
      early skip of rewriting module: pandas.core.indexes.datetimes [assertion]
      early skip of rewriting module: pandas.core.indexes.datetimelike [assertion]
      early skip of rewriting module: pandas.core.indexes.range [assertion]
      early skip of rewriting module: pandas.core.tools [assertion]
      early skip of rewriting module: pandas.core.tools.timedeltas [assertion]
      early skip of rewriting module: pandas.core.tools.times [assertion]
      early skip of rewriting module: pandas.core.indexes.interval [assertion]
      early skip of rewriting module: pandas.core.indexes.multi [assertion]
      early skip of rewriting module: pandas.core.indexes.timedeltas [assertion]
      early skip of rewriting module: pandas.core.indexes.period [assertion]
      early skip of rewriting module: pandas.core.sample [assertion]
      early skip of rewriting module: pandas.core.array_algos.replace [assertion]
      early skip of rewriting module: pandas.core.internals [assertion]
      early skip of rewriting module: pandas.core.internals.api [assertion]
      early skip of rewriting module: pandas.core.internals.blocks [assertion]
      early skip of rewriting module: pandas.core.internals.array_manager [assertion]
      early skip of rewriting module: pandas.core.internals.base [assertion]
      early skip of rewriting module: pandas.core.internals.managers [assertion]
      early skip of rewriting module: pandas.core.internals.ops [assertion]
      early skip of rewriting module: pandas.core.internals.concat [assertion]
      early skip of rewriting module: pandas.core.internals.construction [assertion]
      early skip of rewriting module: pandas.core.methods [assertion]
      early skip of rewriting module: pandas.core.methods.describe [assertion]
      early skip of rewriting module: pandas.core.reshape [assertion]
      early skip of rewriting module: pandas.core.reshape.concat [assertion]
      early skip of rewriting module: pandas.io.formats.format [assertion]
      early skip of rewriting module: pandas.io.common [assertion]
      early skip of rewriting module: gzip [assertion]
      early skip of rewriting module: mmap [assertion]
      early skip of rewriting module: tarfile [assertion]
      early skip of rewriting module: pandas.core.shared_docs [assertion]
      early skip of rewriting module: pandas.core.window [assertion]
      early skip of rewriting module: pandas.core.window.ewm [assertion]
      early skip of rewriting module: pandas._libs.window [assertion]
      early skip of rewriting module: pandas._libs.window.aggregations [assertion]
      early skip of rewriting module: pandas.core.indexers.objects [assertion]
      early skip of rewriting module: pandas._libs.window.indexers [assertion]
      early skip of rewriting module: pandas.core.util.numba_ [assertion]
      early skip of rewriting module: pandas.core.window.common [assertion]
      early skip of rewriting module: pandas.core.window.doc [assertion]
      early skip of rewriting module: pandas.core.window.numba_ [assertion]
      early skip of rewriting module: pandas.core.window.online [assertion]
      early skip of rewriting module: pandas.core.window.rolling [assertion]
      early skip of rewriting module: pandas.core.window.expanding [assertion]
      early skip of rewriting module: pandas.core.methods.selectn [assertion]
      early skip of rewriting module: pandas.core.reshape.melt [assertion]
      early skip of rewriting module: pandas.core.reshape.util [assertion]
      early skip of rewriting module: pandas.core.tools.numeric [assertion]
      early skip of rewriting module: pandas.core.series [assertion]
      early skip of rewriting module: pandas._libs.reshape [assertion]
      early skip of rewriting module: pandas.core.indexes.accessors [assertion]
      early skip of rewriting module: pandas.core.tools.datetimes [assertion]
      early skip of rewriting module: pandas.arrays [assertion]
      early skip of rewriting module: pandas.io.formats.info [assertion]
      early skip of rewriting module: pandas.plotting [assertion]
      early skip of rewriting module: pandas.plotting._core [assertion]
      early skip of rewriting module: pandas.plotting._misc [assertion]
      early skip of rewriting module: pandas.core.groupby.base [assertion]
      early skip of rewriting module: pandas.core.groupby.ops [assertion]
      early skip of rewriting module: pandas._libs.groupby [assertion]
      early skip of rewriting module: pandas.core.groupby.grouper [assertion]
      early skip of rewriting module: pandas.core.groupby.categorical [assertion]
      early skip of rewriting module: pandas.core.groupby.groupby [assertion]
      early skip of rewriting module: pandas.core.groupby.numba_ [assertion]
      early skip of rewriting module: pandas.core.groupby.indexing [assertion]
      early skip of rewriting module: pandas.tseries.api [assertion]
      early skip of rewriting module: pandas.core.computation.api [assertion]
      early skip of rewriting module: pandas.core.computation.eval [assertion]
      early skip of rewriting module: pandas.core.computation.engines [assertion]
      early skip of rewriting module: pandas.core.computation.align [assertion]
      early skip of rewriting module: pandas.core.computation.common [assertion]
      early skip of rewriting module: pandas.core.computation.ops [assertion]
      early skip of rewriting module: pandas.core.computation.scope [assertion]
      early skip of rewriting module: pandas.core.computation.expr [assertion]
      early skip of rewriting module: pandas.core.computation.parsing [assertion]
      early skip of rewriting module: pandas.core.reshape.api [assertion]
      early skip of rewriting module: pandas.core.reshape.encoding [assertion]
      early skip of rewriting module: pandas.core.reshape.merge [assertion]
      early skip of rewriting module: pandas.core.reshape.pivot [assertion]
      early skip of rewriting module: pandas.core.reshape.tile [assertion]
      early skip of rewriting module: pandas.api [assertion]
      early skip of rewriting module: pandas.api.extensions [assertion]
      early skip of rewriting module: pandas.api.indexers [assertion]
      early skip of rewriting module: pandas.api.interchange [assertion]
      early skip of rewriting module: pandas.core.interchange [assertion]
      early skip of rewriting module: pandas.core.interchange.dataframe_protocol [assertion]
      early skip of rewriting module: pandas.core.interchange.from_dataframe [assertion]
      early skip of rewriting module: pandas.core.interchange.utils [assertion]
      early skip of rewriting module: pandas.api.types [assertion]
      early skip of rewriting module: pandas.core.dtypes.api [assertion]
      early skip of rewriting module: pandas.api.typing [assertion]
      early skip of rewriting module: pandas.core.resample [assertion]
      early skip of rewriting module: pandas.io.json [assertion]
      early skip of rewriting module: pandas.io.json._json [assertion]
      early skip of rewriting module: pandas._libs.json [assertion]
      early skip of rewriting module: pandas.io.json._normalize [assertion]
      early skip of rewriting module: pandas.io.json._table_schema [assertion]
      early skip of rewriting module: pandas.io.parsers [assertion]
      early skip of rewriting module: pandas.io.parsers.readers [assertion]
      early skip of rewriting module: pandas._libs.parsers [assertion]
      early skip of rewriting module: pandas.io.parsers.arrow_parser_wrapper [assertion]
      early skip of rewriting module: pandas.io.parsers.base_parser [assertion]
      early skip of rewriting module: pandas.io.parsers.c_parser_wrapper [assertion]
      early skip of rewriting module: pandas.io.parsers.python_parser [assertion]
      early skip of rewriting module: pandas.io.stata [assertion]
      early skip of rewriting module: pandas.testing [assertion]
      early skip of rewriting module: pandas._testing [assertion]
      early skip of rewriting module: pandas._testing._io [assertion]
      early skip of rewriting module: pandas._testing.contexts [assertion]
      early skip of rewriting module: pandas._testing._warnings [assertion]
      early skip of rewriting module: pandas._testing.asserters [assertion]
      early skip of rewriting module: pandas._libs.testing [assertion]
      early skip of rewriting module: cmath [assertion]
      early skip of rewriting module: pandas._testing.compat [assertion]
      early skip of rewriting module: pandas.util._print_versions [assertion]
      early skip of rewriting module: pandas.io.api [assertion]
      early skip of rewriting module: pandas.io.clipboards [assertion]
      early skip of rewriting module: pandas.io.excel [assertion]
      early skip of rewriting module: pandas.io.excel._base [assertion]
      early skip of rewriting module: pandas.io.excel._util [assertion]
      early skip of rewriting module: pandas.io.excel._calamine [assertion]
      early skip of rewriting module: pandas.io.excel._odfreader [assertion]
      early skip of rewriting module: pandas.io.excel._openpyxl [assertion]
      early skip of rewriting module: pandas.io.excel._pyxlsb [assertion]
      early skip of rewriting module: pandas.io.excel._xlrd [assertion]
      early skip of rewriting module: pandas.io.excel._odswriter [assertion]
      early skip of rewriting module: pandas.io.excel._xlsxwriter [assertion]
      early skip of rewriting module: pandas.io.feather_format [assertion]
      early skip of rewriting module: pandas.io.gbq [assertion]
      early skip of rewriting module: pandas.io.html [assertion]
      early skip of rewriting module: pandas.io.orc [assertion]
      early skip of rewriting module: pandas.io.parquet [assertion]
      early skip of rewriting module: pandas.io.pickle [assertion]
      early skip of rewriting module: pandas.compat.pickle_compat [assertion]
      early skip of rewriting module: pandas.io.pytables [assertion]
      early skip of rewriting module: pandas.core.computation.pytables [assertion]
      early skip of rewriting module: pandas.io.sas [assertion]
      early skip of rewriting module: pandas.io.sas.sasreader [assertion]
      early skip of rewriting module: pandas.io.spss [assertion]
      early skip of rewriting module: pandas.io.sql [assertion]
      early skip of rewriting module: pandas.io.xml [assertion]
      early skip of rewriting module: pandas.util._tester [assertion]
      early skip of rewriting module: pandas._version_meson [assertion]
      early skip of rewriting module: test [assertion]
      early skip of rewriting module: test.mock_cgt_calculator [assertion]
      early skip of rewriting module: src [assertion]
      early skip of rewriting module: src.main [assertion]
      early skip of rewriting module: src.lp_solver [assertion]
      early skip of rewriting module: scipy [assertion]
      early skip of rewriting module: scipy.__config__ [assertion]
      early skip of rewriting module: scipy.version [assertion]
      early skip of rewriting module: scipy._distributor_init [assertion]
      early skip of rewriting module: scipy._distributor_init_local [assertion]
      early skip of rewriting module: scipy._lib [assertion]
      early skip of rewriting module: scipy._lib._testutils [assertion]
      early skip of rewriting module: scipy._lib._pep440 [assertion]
      early skip of rewriting module: scipy._lib._ccallback [assertion]
      early skip of rewriting module: scipy._lib._ccallback_c [assertion]
      early skip of rewriting module: scipy.optimize [assertion]
      early skip of rewriting module: scipy.optimize._optimize [assertion]
      early skip of rewriting module: scipy.linalg [assertion]
      early skip of rewriting module: scipy.linalg._misc [assertion]
      early skip of rewriting module: scipy.linalg.blas [assertion]
      early skip of rewriting module: scipy.linalg._fblas [assertion]
      early skip of rewriting module: scipy.linalg._cblas [assertion]
      early skip of rewriting module: scipy.linalg._fblas_64 [assertion]
      early skip of rewriting module: scipy.linalg.lapack [assertion]
      early skip of rewriting module: scipy.linalg._flapack [assertion]
      early skip of rewriting module: scipy.linalg._clapack [assertion]
      early skip of rewriting module: scipy.linalg._flapack_64 [assertion]
      early skip of rewriting module: scipy.linalg._cythonized_array_utils [assertion]
      early skip of rewriting module: scipy.linalg.cython_lapack [assertion]
      early skip of rewriting module: scipy.linalg._basic [assertion]
      early skip of rewriting module: scipy.linalg._decomp [assertion]
      early skip of rewriting module: scipy._lib._util [assertion]
      early skip of rewriting module: scipy._lib._array_api [assertion]
      early skip of rewriting module: scipy._lib.array_api_compat [assertion]
      early skip of rewriting module: scipy._lib.array_api_compat.common [assertion]
      early skip of rewriting module: scipy._lib.array_api_compat.common._helpers [assertion]
      early skip of rewriting module: scipy._lib.array_api_compat.numpy [assertion]
      early skip of rewriting module: numpy.f2py [assertion]
      early skip of rewriting module: numpy.f2py.f2py2e [assertion]
      early skip of rewriting module: numpy.f2py.crackfortran [assertion]
      early skip of rewriting module: fileinput [assertion]
      early skip of rewriting module: charset_normalizer [assertion]
      early skip of rewriting module: charset_normalizer.api [assertion]
      early skip of rewriting module: charset_normalizer.cd [assertion]
      early skip of rewriting module: charset_normalizer.constant [assertion]
      early skip of rewriting module: charset_normalizer.md [assertion]
      early skip of rewriting module: charset_normalizer.md__mypyc [assertion]
      early skip of rewriting module: charset_normalizer.utils [assertion]
      early skip of rewriting module: _multibytecodec [assertion]
      early skip of rewriting module: charset_normalizer.models [assertion]
      early skip of rewriting module: charset_normalizer.legacy [assertion]
      early skip of rewriting module: charset_normalizer.version [assertion]
      early skip of rewriting module: numpy.f2py.__version__ [assertion]
      early skip of rewriting module: numpy.f2py.auxfuncs [assertion]
      early skip of rewriting module: numpy.f2py.cfuncs [assertion]
      early skip of rewriting module: numpy.f2py.symbolic [assertion]
      early skip of rewriting module: numpy.f2py.rules [assertion]
      early skip of rewriting module: numpy.f2py.capi_maps [assertion]
      early skip of rewriting module: numpy.f2py.cb_rules [assertion]
      early skip of rewriting module: numpy.f2py._isocbind [assertion]
      early skip of rewriting module: numpy.f2py.common_rules [assertion]
      early skip of rewriting module: numpy.f2py.func2subr [assertion]
      early skip of rewriting module: numpy.f2py.use_rules [assertion]
      early skip of rewriting module: numpy.f2py.f90mod_rules [assertion]
      early skip of rewriting module: numpy.f2py._backends [assertion]
      early skip of rewriting module: numpy.f2py.diagnose [assertion]
      early skip of rewriting module: numpy.strings [assertion]
      early skip of rewriting module: numpy._core.strings [assertion]
      early skip of rewriting module: numpy.rec [assertion]
      early skip of rewriting module: numpy.typing [assertion]
      early skip of rewriting module: numpy._typing._add_docstring [assertion]
      early skip of rewriting module: numpy.char [assertion]
      early skip of rewriting module: numpy._core.defchararray [assertion]
      early skip of rewriting module: numpy.fft [assertion]
      early skip of rewriting module: numpy.fft._pocketfft [assertion]
      early skip of rewriting module: numpy.fft._pocketfft_umath [assertion]
      early skip of rewriting module: numpy.fft._helper [assertion]
      early skip of rewriting module: numpy.fft.helper [assertion]
      early skip of rewriting module: numpy.core [assertion]
      early skip of rewriting module: numpy.core._utils [assertion]
      early skip of rewriting module: numpy.testing [assertion]
      early skip of rewriting module: numpy.testing._private [assertion]
      early skip of rewriting module: numpy.testing._private.utils [assertion]
      early skip of rewriting module: numpy.testing._private.extbuild [assertion]
      early skip of rewriting module: numpy.testing.overrides [assertion]
      early skip of rewriting module: numpy.polynomial [assertion]
      early skip of rewriting module: numpy.polynomial.polynomial [assertion]
      early skip of rewriting module: numpy.polynomial.polyutils [assertion]
      early skip of rewriting module: numpy.polynomial._polybase [assertion]
      early skip of rewriting module: numpy.polynomial.chebyshev [assertion]
      early skip of rewriting module: numpy.polynomial.legendre [assertion]
      early skip of rewriting module: numpy.polynomial.hermite [assertion]
      early skip of rewriting module: numpy.polynomial.hermite_e [assertion]
      early skip of rewriting module: numpy.polynomial.laguerre [assertion]
      early skip of rewriting module: numpy.ctypeslib [assertion]
      early skip of rewriting module: scipy._lib.array_api_compat.numpy._aliases [assertion]
      early skip of rewriting module: scipy._lib.array_api_compat.common._aliases [assertion]
      early skip of rewriting module: scipy._lib.array_api_compat._internal [assertion]
      early skip of rewriting module: scipy._lib.array_api_compat.numpy.linalg [assertion]
      early skip of rewriting module: scipy._lib.array_api_compat.common._linalg [assertion]
      early skip of rewriting module: scipy._lib.deprecation [assertion]
      early skip of rewriting module: scipy.linalg._decomp_svd [assertion]
      early skip of rewriting module: scipy.linalg._solve_toeplitz [assertion]
      early skip of rewriting module: scipy.linalg._decomp_lu [assertion]
      early skip of rewriting module: scipy.linalg._decomp_lu_cython [assertion]
      early skip of rewriting module: scipy.linalg._decomp_ldl [assertion]
      early skip of rewriting module: scipy.linalg._decomp_cholesky [assertion]
      early skip of rewriting module: scipy.linalg._decomp_qr [assertion]
      early skip of rewriting module: scipy.linalg._decomp_qz [assertion]
      early skip of rewriting module: scipy.linalg._decomp_schur [assertion]
      early skip of rewriting module: scipy.linalg._decomp_polar [assertion]
      early skip of rewriting module: scipy.linalg._matfuncs [assertion]
      early skip of rewriting module: scipy.linalg._expm_frechet [assertion]
      early skip of rewriting module: scipy.linalg._matfuncs_sqrtm [assertion]
      early skip of rewriting module: scipy.linalg._matfuncs_sqrtm_triu [assertion]
      early skip of rewriting module: scipy.linalg._matfuncs_expm [assertion]
      early skip of rewriting module: scipy.linalg.cython_blas [assertion]
      early skip of rewriting module: scipy.linalg._special_matrices [assertion]
      early skip of rewriting module: scipy.linalg._solvers [assertion]
      early skip of rewriting module: scipy.linalg._procrustes [assertion]
      early skip of rewriting module: scipy.linalg._decomp_update [assertion]
      early skip of rewriting module: scipy.linalg._sketches [assertion]
      early skip of rewriting module: scipy.sparse [assertion]
      early skip of rewriting module: scipy.sparse._base [assertion]
      early skip of rewriting module: scipy.sparse._sputils [assertion]
      early skip of rewriting module: scipy.sparse._matrix [assertion]
      early skip of rewriting module: scipy.sparse._csr [assertion]
      early skip of rewriting module: scipy.sparse._sparsetools [assertion]
      early skip of rewriting module: scipy.sparse._compressed [assertion]
      early skip of rewriting module: scipy.sparse._data [assertion]
      early skip of rewriting module: scipy.sparse._index [assertion]
      early skip of rewriting module: scipy.sparse._csc [assertion]
      early skip of rewriting module: scipy.sparse._lil [assertion]
      early skip of rewriting module: scipy.sparse._csparsetools [assertion]
      early skip of rewriting module: scipy.sparse._dok [assertion]
      early skip of rewriting module: scipy.sparse._coo [assertion]
      early skip of rewriting module: scipy.sparse._dia [assertion]
      early skip of rewriting module: scipy.sparse._bsr [assertion]
      early skip of rewriting module: scipy.sparse._construct [assertion]
      early skip of rewriting module: scipy.sparse._extract [assertion]
      early skip of rewriting module: scipy.sparse._matrix_io [assertion]
      early skip of rewriting module: scipy.sparse.csgraph [assertion]
      early skip of rewriting module: scipy.sparse.csgraph._laplacian [assertion]
      early skip of rewriting module: scipy.sparse.linalg [assertion]
      early skip of rewriting module: scipy.sparse.linalg._isolve [assertion]
      early skip of rewriting module: scipy.sparse.linalg._isolve.iterative [assertion]
      early skip of rewriting module: scipy.sparse.linalg._interface [assertion]
      early skip of rewriting module: scipy.sparse.linalg._isolve.utils [assertion]
      early skip of rewriting module: scipy.sparse.linalg._isolve.minres [assertion]
      early skip of rewriting module: scipy.sparse.linalg._isolve.lgmres [assertion]
      early skip of rewriting module: scipy.sparse.linalg._isolve._gcrotmk [assertion]
      early skip of rewriting module: scipy.sparse.linalg._isolve.lsqr [assertion]
      early skip of rewriting module: scipy.sparse.linalg._isolve.lsmr [assertion]
      early skip of rewriting module: scipy.sparse.linalg._isolve.tfqmr [assertion]
      early skip of rewriting module: scipy.sparse.linalg._dsolve [assertion]
      early skip of rewriting module: scipy.sparse.linalg._dsolve.linsolve [assertion]
      early skip of rewriting module: scipy.sparse.linalg._dsolve._superlu [assertion]
      early skip of rewriting module: scikits [assertion]
      early skip of rewriting module: scipy.sparse.linalg._dsolve._add_newdocs [assertion]
      early skip of rewriting module: scipy.sparse.linalg._eigen [assertion]
      early skip of rewriting module: scipy.sparse.linalg._eigen.arpack [assertion]
      early skip of rewriting module: scipy.sparse.linalg._eigen.arpack.arpack [assertion]
      early skip of rewriting module: scipy._lib._threadsafety [assertion]
      early skip of rewriting module: scipy._lib.decorator [assertion]
      early skip of rewriting module: scipy.sparse.linalg._eigen.arpack._arpack [assertion]
      early skip of rewriting module: scipy.sparse.linalg._eigen.lobpcg [assertion]
      early skip of rewriting module: scipy.sparse.linalg._eigen.lobpcg.lobpcg [assertion]
      early skip of rewriting module: scipy.sparse.linalg._eigen._svds [assertion]
      early skip of rewriting module: scipy.sparse.linalg._svdp [assertion]
      early skip of rewriting module: scipy.sparse.linalg._propack [assertion]
      early skip of rewriting module: scipy.sparse.linalg._propack._spropack [assertion]
      early skip of rewriting module: scipy.sparse.linalg._propack._dpropack [assertion]
      early skip of rewriting module: scipy.sparse.linalg._propack._cpropack [assertion]
      early skip of rewriting module: scipy.sparse.linalg._propack._zpropack [assertion]
      early skip of rewriting module: scipy.sparse.linalg._matfuncs [assertion]
      early skip of rewriting module: scipy.sparse.linalg._expm_multiply [assertion]
      early skip of rewriting module: scipy.sparse.linalg._onenormest [assertion]
      early skip of rewriting module: scipy.sparse.linalg._norm [assertion]
      early skip of rewriting module: scipy.sparse.linalg._special_sparse_arrays [assertion]
      early skip of rewriting module: scipy.sparse.linalg.isolve [assertion]
      early skip of rewriting module: scipy.sparse.linalg.dsolve [assertion]
      early skip of rewriting module: scipy.sparse.linalg.interface [assertion]
      early skip of rewriting module: scipy.sparse.linalg.eigen [assertion]
      early skip of rewriting module: scipy.sparse.linalg.matfuncs [assertion]
      early skip of rewriting module: scipy.sparse.csgraph._shortest_path [assertion]
      early skip of rewriting module: scipy.sparse.csgraph._validation [assertion]
      early skip of rewriting module: scipy.sparse.csgraph._tools [assertion]
      early skip of rewriting module: scipy.sparse.csgraph._traversal [assertion]
      early skip of rewriting module: scipy.sparse.csgraph._min_spanning_tree [assertion]
      early skip of rewriting module: scipy.sparse.csgraph._flow [assertion]
      early skip of rewriting module: scipy.sparse.csgraph._matching [assertion]
      early skip of rewriting module: scipy.sparse.csgraph._reordering [assertion]
      early skip of rewriting module: scipy.sparse.base [assertion]
      early skip of rewriting module: scipy.sparse.bsr [assertion]
      early skip of rewriting module: scipy.sparse.compressed [assertion]
      early skip of rewriting module: scipy.sparse.construct [assertion]
      early skip of rewriting module: scipy.sparse.coo [assertion]
      early skip of rewriting module: scipy.sparse.csc [assertion]
      early skip of rewriting module: scipy.sparse.csr [assertion]
      early skip of rewriting module: scipy.sparse.data [assertion]
      early skip of rewriting module: scipy.sparse.dia [assertion]
      early skip of rewriting module: scipy.sparse.dok [assertion]
      early skip of rewriting module: scipy.sparse.extract [assertion]
      early skip of rewriting module: scipy.sparse.lil [assertion]
      early skip of rewriting module: scipy.sparse.sparsetools [assertion]
      early skip of rewriting module: scipy.sparse.sputils [assertion]
      early skip of rewriting module: scipy.linalg._decomp_cossin [assertion]
      early skip of rewriting module: scipy.linalg.decomp [assertion]
      early skip of rewriting module: scipy.linalg.decomp_cholesky [assertion]
      early skip of rewriting module: scipy.linalg.decomp_lu [assertion]
      early skip of rewriting module: scipy.linalg.decomp_qr [assertion]
      early skip of rewriting module: scipy.linalg.decomp_svd [assertion]
      early skip of rewriting module: scipy.linalg.decomp_schur [assertion]
      early skip of rewriting module: scipy.linalg.basic [assertion]
      early skip of rewriting module: scipy.linalg.misc [assertion]
      early skip of rewriting module: scipy.linalg.special_matrices [assertion]
      early skip of rewriting module: scipy.linalg.matfuncs [assertion]
      early skip of rewriting module: scipy.optimize._linesearch [assertion]
      early skip of rewriting module: scipy.optimize._minpack2 [assertion]
      early skip of rewriting module: scipy.optimize._dcsrch [assertion]
      early skip of rewriting module: scipy.optimize._numdiff [assertion]
      early skip of rewriting module: scipy.optimize._group_columns [assertion]
      early skip of rewriting module: scipy.optimize._differentiable_functions [assertion]
      early skip of rewriting module: scipy.optimize._hessian_update_strategy [assertion]
      early skip of rewriting module: scipy.optimize._minimize [assertion]
      early skip of rewriting module: scipy.optimize._trustregion_dogleg [assertion]
      early skip of rewriting module: scipy.optimize._trustregion [assertion]
      early skip of rewriting module: scipy.optimize._trustregion_ncg [assertion]
      early skip of rewriting module: scipy.optimize._trustregion_krylov [assertion]
      early skip of rewriting module: scipy.optimize._trlib [assertion]
      early skip of rewriting module: scipy.optimize._trlib._trlib [assertion]
      early skip of rewriting module: scipy._lib.messagestream [assertion]
      early skip of rewriting module: scipy.optimize._trustregion_exact [assertion]
      early skip of rewriting module: scipy.optimize._trustregion_constr [assertion]
      early skip of rewriting module: scipy.optimize._trustregion_constr.minimize_trustregion_constr [assertion]
      early skip of rewriting module: scipy.optimize._constraints [assertion]
      early skip of rewriting module: scipy.optimize._trustregion_constr.equality_constrained_sqp [assertion]
      early skip of rewriting module: scipy.optimize._trustregion_constr.projections [assertion]
      early skip of rewriting module: sksparse [assertion]
      early skip of rewriting module: scipy.optimize._trustregion_constr.qp_subproblem [assertion]
      early skip of rewriting module: scipy.optimize._trustregion_constr.canonical_constraint [assertion]
      early skip of rewriting module: scipy.optimize._trustregion_constr.tr_interior_point [assertion]
      early skip of rewriting module: scipy.optimize._trustregion_constr.report [assertion]
      early skip of rewriting module: scipy.optimize._lbfgsb_py [assertion]
      early skip of rewriting module: scipy.optimize._lbfgsb [assertion]
      early skip of rewriting module: scipy.optimize._tnc [assertion]
      early skip of rewriting module: scipy.optimize._moduleTNC [assertion]
      early skip of rewriting module: scipy.optimize._cobyla_py [assertion]
      early skip of rewriting module: scipy.optimize._cobyla [assertion]
      early skip of rewriting module: scipy.optimize._slsqp_py [assertion]
      early skip of rewriting module: scipy.optimize._slsqp [assertion]
      early skip of rewriting module: scipy.optimize._root [assertion]
      early skip of rewriting module: scipy.optimize._minpack_py [assertion]
      early skip of rewriting module: scipy.optimize._minpack [assertion]
      early skip of rewriting module: scipy.optimize._lsq [assertion]
      early skip of rewriting module: scipy.optimize._lsq.least_squares [assertion]
      early skip of rewriting module: scipy.optimize._lsq.trf [assertion]
      early skip of rewriting module: scipy.optimize._lsq.common [assertion]
      early skip of rewriting module: scipy.optimize._lsq.dogbox [assertion]
      early skip of rewriting module: scipy.optimize._lsq.lsq_linear [assertion]
      early skip of rewriting module: scipy.optimize._lsq.trf_linear [assertion]
      early skip of rewriting module: scipy.optimize._lsq.givens_elimination [assertion]
      early skip of rewriting module: scipy.optimize._lsq.bvls [assertion]
      early skip of rewriting module: scipy.optimize._spectral [assertion]
      early skip of rewriting module: scipy.optimize._nonlin [assertion]
      early skip of rewriting module: scipy.optimize._root_scalar [assertion]
      early skip of rewriting module: scipy.optimize._zeros_py [assertion]
      early skip of rewriting module: scipy.optimize._zeros [assertion]
      early skip of rewriting module: scipy.optimize._nnls [assertion]
      early skip of rewriting module: scipy.optimize._basinhopping [assertion]
      early skip of rewriting module: scipy.optimize._linprog [assertion]
      early skip of rewriting module: scipy.optimize._linprog_highs [assertion]
      early skip of rewriting module: scipy.optimize._highs [assertion]
      early skip of rewriting module: scipy.optimize._highs._highs_wrapper [assertion]
      early skip of rewriting module: scipy.optimize._highs._highs_constants [assertion]
      early skip of rewriting module: scipy.optimize._linprog_ip [assertion]
      early skip of rewriting module: scipy.optimize._linprog_util [assertion]
      early skip of rewriting module: scipy.optimize._remove_redundancy [assertion]
      early skip of rewriting module: scipy.linalg.interpolative [assertion]
      early skip of rewriting module: scipy.linalg._interpolative_backend [assertion]
      early skip of rewriting module: scipy.linalg._interpolative [assertion]
      early skip of rewriting module: sksparse [assertion]
      early skip of rewriting module: scikits [assertion]
      early skip of rewriting module: scipy.optimize._linprog_simplex [assertion]
      early skip of rewriting module: scipy.optimize._linprog_rs [assertion]
      early skip of rewriting module: scipy.optimize._bglu_dense [assertion]
      early skip of rewriting module: scipy.optimize._linprog_doc [assertion]
      early skip of rewriting module: scipy.optimize._lsap [assertion]
      early skip of rewriting module: scipy.optimize._differentialevolution [assertion]
      early skip of rewriting module: scipy.optimize._isotonic [assertion]
      early skip of rewriting module: scipy.optimize._pava_pybind [assertion]
      early skip of rewriting module: scipy.optimize._shgo [assertion]
      early skip of rewriting module: scipy.spatial [assertion]
      early skip of rewriting module: scipy.spatial._kdtree [assertion]
      early skip of rewriting module: scipy.spatial._ckdtree [assertion]
      early skip of rewriting module: scipy.spatial._qhull [assertion]
      early skip of rewriting module: scipy.spatial._spherical_voronoi [assertion]
      early skip of rewriting module: scipy.spatial._voronoi [assertion]
      early skip of rewriting module: scipy.spatial._plotutils [assertion]
      early skip of rewriting module: scipy.spatial._procrustes [assertion]
      early skip of rewriting module: scipy.spatial._geometric_slerp [assertion]
      early skip of rewriting module: scipy.spatial.distance [assertion]
      early skip of rewriting module: scipy.spatial._distance_wrap [assertion]
      early skip of rewriting module: scipy.spatial._hausdorff [assertion]
      early skip of rewriting module: scipy.special [assertion]
      early skip of rewriting module: scipy.special._sf_error [assertion]
      early skip of rewriting module: scipy.special._ufuncs [assertion]
      early skip of rewriting module: scipy.special._ufuncs_cxx [assertion]
      early skip of rewriting module: scipy.special._cdflib [assertion]
      early skip of rewriting module: scipy.special._support_alternative_backends [assertion]
      early skip of rewriting module: scipy.special._basic [assertion]
      early skip of rewriting module: scipy.special._specfun [assertion]
      early skip of rewriting module: scipy.special._comb [assertion]
      early skip of rewriting module: scipy.special._logsumexp [assertion]
      early skip of rewriting module: scipy.special._orthogonal [assertion]
      early skip of rewriting module: scipy.special._spfun_stats [assertion]
      early skip of rewriting module: scipy.special._ellip_harm [assertion]
      early skip of rewriting module: scipy.special._ellip_harm_2 [assertion]
      early skip of rewriting module: scipy.special._lambertw [assertion]
      early skip of rewriting module: scipy.special._spherical_bessel [assertion]
      early skip of rewriting module: scipy.special.add_newdocs [assertion]
      early skip of rewriting module: scipy.special.basic [assertion]
      early skip of rewriting module: scipy.special.orthogonal [assertion]
      early skip of rewriting module: scipy.special.specfun [assertion]
      early skip of rewriting module: scipy.special.sf_error [assertion]
      early skip of rewriting module: scipy.special.spfun_stats [assertion]
      early skip of rewriting module: scipy.spatial._distance_pybind [assertion]
      early skip of rewriting module: scipy.spatial.ckdtree [assertion]
      early skip of rewriting module: scipy.spatial.kdtree [assertion]
      early skip of rewriting module: scipy.spatial.qhull [assertion]
      early skip of rewriting module: scipy.spatial.transform [assertion]
      early skip of rewriting module: scipy.spatial.transform._rotation [assertion]
      early skip of rewriting module: backports_abc [assertion]
      early skip of rewriting module: scipy.spatial.transform._rotation_groups [assertion]
      early skip of rewriting module: scipy.constants [assertion]
      early skip of rewriting module: scipy.constants._codata [assertion]
      early skip of rewriting module: scipy.constants._constants [assertion]
      early skip of rewriting module: scipy.constants.codata [assertion]
      early skip of rewriting module: scipy.constants.constants [assertion]
      early skip of rewriting module: scipy.spatial.transform._rotation_spline [assertion]
      early skip of rewriting module: scipy.spatial.transform.rotation [assertion]
      early skip of rewriting module: scipy.optimize._shgo_lib [assertion]
      early skip of rewriting module: scipy.optimize._shgo_lib._complex [assertion]
      early skip of rewriting module: scipy.optimize._shgo_lib._vertex [assertion]
      early skip of rewriting module: scipy.optimize._dual_annealing [assertion]
      early skip of rewriting module: scipy.optimize._qap [assertion]
      early skip of rewriting module: scipy.optimize._direct_py [assertion]
      early skip of rewriting module: scipy.optimize._direct [assertion]
      early skip of rewriting module: scipy.optimize._milp [assertion]
      early skip of rewriting module: scipy.optimize.cobyla [assertion]
      early skip of rewriting module: scipy.optimize.lbfgsb [assertion]
      early skip of rewriting module: scipy.optimize.linesearch [assertion]
      early skip of rewriting module: scipy.optimize.minpack [assertion]
      early skip of rewriting module: scipy.optimize.minpack2 [assertion]
      early skip of rewriting module: scipy.optimize.moduleTNC [assertion]
      early skip of rewriting module: scipy.optimize.nonlin [assertion]
      early skip of rewriting module: scipy.optimize.optimize [assertion]
      early skip of rewriting module: scipy.optimize.slsqp [assertion]
      early skip of rewriting module: scipy.optimize.tnc [assertion]
      early skip of rewriting module: scipy.optimize.zeros [assertion]
      early skip of rewriting module: src.market_data_api [assertion]
      early skip of rewriting module: dotenv [assertion]
      early skip of rewriting module: dotenv.main [assertion]
      early skip of rewriting module: dotenv.parser [assertion]
      early skip of rewriting module: dotenv.variables [assertion]
      early skip of rewriting module: requests [assertion]
      early skip of rewriting module: urllib3 [assertion]
      early skip of rewriting module: urllib3.exceptions [assertion]
      early skip of rewriting module: http [assertion]
      early skip of rewriting module: http.client [assertion]
      early skip of rewriting module: urllib3._base_connection [assertion]
      early skip of rewriting module: urllib3.util [assertion]
      early skip of rewriting module: urllib3.util.connection [assertion]
      early skip of rewriting module: urllib3.util.timeout [assertion]
      early skip of rewriting module: urllib3.util.request [assertion]
      early skip of rewriting module: urllib3.util.util [assertion]
      early skip of rewriting module: brotlicffi [assertion]
      early skip of rewriting module: brotli [assertion]
      early skip of rewriting module: zstandard [assertion]
      early skip of rewriting module: urllib3.util.response [assertion]
      early skip of rewriting module: urllib3.util.retry [assertion]
      early skip of rewriting module: urllib3.util.ssl_ [assertion]
      early skip of rewriting module: urllib3.util.url [assertion]
      early skip of rewriting module: urllib3.util.ssltransport [assertion]
      early skip of rewriting module: urllib3.util.wait [assertion]
      early skip of rewriting module: urllib3._collections [assertion]
      early skip of rewriting module: urllib3._version [assertion]
      early skip of rewriting module: urllib3.connectionpool [assertion]
      early skip of rewriting module: urllib3._request_methods [assertion]
      early skip of rewriting module: urllib3.filepost [assertion]
      early skip of rewriting module: urllib3.fields [assertion]
      early skip of rewriting module: mimetypes [assertion]
      early skip of rewriting module: winreg [assertion]
      early skip of rewriting module: urllib3.response [assertion]
      early skip of rewriting module: brotlicffi [assertion]
      early skip of rewriting module: brotli [assertion]
      early skip of rewriting module: zstandard [assertion]
      early skip of rewriting module: urllib3.connection [assertion]
      early skip of rewriting module: urllib3.util.ssl_match_hostname [assertion]
      early skip of rewriting module: urllib3.util.proxy [assertion]
      early skip of rewriting module: urllib3.poolmanager [assertion]
      early skip of rewriting module: requests.exceptions [assertion]
      early skip of rewriting module: requests.compat [assertion]
      early skip of rewriting module: chardet [assertion]
      early skip of rewriting module: chardet.charsetgroupprober [assertion]
      early skip of rewriting module: chardet.charsetprober [assertion]
      early skip of rewriting module: chardet.enums [assertion]
      early skip of rewriting module: chardet.resultdict [assertion]
      early skip of rewriting module: chardet.universaldetector [assertion]
      early skip of rewriting module: chardet.escprober [assertion]
      early skip of rewriting module: chardet.codingstatemachine [assertion]
      early skip of rewriting module: chardet.codingstatemachinedict [assertion]
      early skip of rewriting module: chardet.escsm [assertion]
      early skip of rewriting module: chardet.latin1prober [assertion]
      early skip of rewriting module: chardet.macromanprober [assertion]
      early skip of rewriting module: chardet.mbcsgroupprober [assertion]
      early skip of rewriting module: chardet.big5prober [assertion]
      early skip of rewriting module: chardet.chardistribution [assertion]
      early skip of rewriting module: chardet.big5freq [assertion]
      early skip of rewriting module: chardet.euckrfreq [assertion]
      early skip of rewriting module: chardet.euctwfreq [assertion]
      early skip of rewriting module: chardet.gb2312freq [assertion]
      early skip of rewriting module: chardet.jisfreq [assertion]
      early skip of rewriting module: chardet.johabfreq [assertion]
      early skip of rewriting module: chardet.mbcharsetprober [assertion]
      early skip of rewriting module: chardet.mbcssm [assertion]
      early skip of rewriting module: chardet.cp949prober [assertion]
      early skip of rewriting module: chardet.eucjpprober [assertion]
      early skip of rewriting module: chardet.jpcntx [assertion]
      early skip of rewriting module: chardet.euckrprober [assertion]
      early skip of rewriting module: chardet.euctwprober [assertion]
      early skip of rewriting module: chardet.gb2312prober [assertion]
      early skip of rewriting module: chardet.johabprober [assertion]
      early skip of rewriting module: chardet.sjisprober [assertion]
      early skip of rewriting module: chardet.utf8prober [assertion]
      early skip of rewriting module: chardet.sbcsgroupprober [assertion]
      early skip of rewriting module: chardet.hebrewprober [assertion]
      early skip of rewriting module: chardet.sbcharsetprober [assertion]
      early skip of rewriting module: chardet.langbulgarianmodel [assertion]
      early skip of rewriting module: chardet.langgreekmodel [assertion]
      early skip of rewriting module: chardet.langhebrewmodel [assertion]
      early skip of rewriting module: chardet.langrussianmodel [assertion]
      early skip of rewriting module: chardet.langthaimodel [assertion]
      early skip of rewriting module: chardet.langturkishmodel [assertion]
      early skip of rewriting module: chardet.utf1632prober [assertion]
      early skip of rewriting module: chardet.version [assertion]
      early skip of rewriting module: simplejson [assertion]
      early skip of rewriting module: http.cookiejar [assertion]
      early skip of rewriting module: urllib.request [assertion]
      early skip of rewriting module: urllib.error [assertion]
      early skip of rewriting module: urllib.response [assertion]
      early skip of rewriting module: _scproxy [assertion]
      early skip of rewriting module: http.cookies [assertion]
      early skip of rewriting module: requests.packages [assertion]
      early skip of rewriting module: idna [assertion]
      early skip of rewriting module: idna.package_data [assertion]
      early skip of rewriting module: idna.core [assertion]
      early skip of rewriting module: idna.idnadata [assertion]
      early skip of rewriting module: idna.intranges [assertion]
      early skip of rewriting module: requests.utils [assertion]
      early skip of rewriting module: requests.certs [assertion]
      early skip of rewriting module: certifi [assertion]
      early skip of rewriting module: certifi.core [assertion]
      early skip of rewriting module: importlib.resources [assertion]
      early skip of rewriting module: importlib._common [assertion]
      early skip of rewriting module: requests.__version__ [assertion]
      early skip of rewriting module: requests._internal_utils [assertion]
      early skip of rewriting module: requests.cookies [assertion]
      early skip of rewriting module: requests.structures [assertion]
      early skip of rewriting module: requests.api [assertion]
      early skip of rewriting module: requests.sessions [assertion]
      early skip of rewriting module: requests.adapters [assertion]
      early skip of rewriting module: requests.auth [assertion]
      early skip of rewriting module: requests.models [assertion]
      early skip of rewriting module: encodings.idna [assertion]
      early skip of rewriting module: stringprep [assertion]
      early skip of rewriting module: requests.hooks [assertion]
      early skip of rewriting module: requests.status_codes [assertion]
      early skip of rewriting module: urllib3.contrib [assertion]
      early skip of rewriting module: urllib3.contrib.socks [assertion]
      early skip of rewriting module: socks [assertion]
      early skip of rewriting module: src.output_excel_writer [assertion]
      early skip of rewriting module: xlsxwriter [assertion]
      early skip of rewriting module: xlsxwriter.workbook [assertion]
      early skip of rewriting module: fractions [assertion]
      early skip of rewriting module: xlsxwriter.image [assertion]
      early skip of rewriting module: xlsxwriter.url [assertion]
      early skip of rewriting module: xlsxwriter.exceptions [assertion]
      early skip of rewriting module: xlsxwriter.xmlwriter [assertion]
      early skip of rewriting module: xlsxwriter.chart_area [assertion]
      early skip of rewriting module: xlsxwriter.chart [assertion]
      early skip of rewriting module: xlsxwriter.color [assertion]
      early skip of rewriting module: xlsxwriter.chart_title [assertion]
      early skip of rewriting module: xlsxwriter.shape [assertion]
      early skip of rewriting module: xlsxwriter.utility [assertion]
      early skip of rewriting module: xlsxwriter.chart_bar [assertion]
      early skip of rewriting module: xlsxwriter.chart_column [assertion]
      early skip of rewriting module: xlsxwriter.chart_doughnut [assertion]
      early skip of rewriting module: xlsxwriter.chart_pie [assertion]
      early skip of rewriting module: xlsxwriter.chart_line [assertion]
      early skip of rewriting module: xlsxwriter.chart_radar [assertion]
      early skip of rewriting module: xlsxwriter.chart_scatter [assertion]
      early skip of rewriting module: xlsxwriter.chart_stock [assertion]
      early skip of rewriting module: xlsxwriter.chartsheet [assertion]
      early skip of rewriting module: xlsxwriter.worksheet [assertion]
      early skip of rewriting module: xlsxwriter.comments [assertion]
      early skip of rewriting module: xlsxwriter.vml [assertion]
      early skip of rewriting module: xlsxwriter.drawing [assertion]
      early skip of rewriting module: xlsxwriter.format [assertion]
      early skip of rewriting module: xlsxwriter.packager [assertion]
      early skip of rewriting module: xlsxwriter.app [assertion]
      early skip of rewriting module: xlsxwriter.contenttypes [assertion]
      early skip of rewriting module: xlsxwriter.core [assertion]
      early skip of rewriting module: xlsxwriter.custom [assertion]
      early skip of rewriting module: xlsxwriter.feature_property_bag [assertion]
      early skip of rewriting module: xlsxwriter.metadata [assertion]
      early skip of rewriting module: xlsxwriter.relationships [assertion]
      early skip of rewriting module: xlsxwriter.rich_value [assertion]
      early skip of rewriting module: xlsxwriter.rich_value_rel [assertion]
      early skip of rewriting module: xlsxwriter.rich_value_structure [assertion]
      early skip of rewriting module: xlsxwriter.rich_value_types [assertion]
      early skip of rewriting module: xlsxwriter.sharedstrings [assertion]
      early skip of rewriting module: xlsxwriter.styles [assertion]
      early skip of rewriting module: xlsxwriter.table [assertion]
      early skip of rewriting module: xlsxwriter.theme [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cgt_calculator.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cgt_calculator.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cgt_calculator.py>
            name: Path
            obj: <class 'pathlib.Path'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cgt_calculator.py>
            name: np
            obj: <module 'numpy' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/numpy/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cgt_calculator.py>
            name: Timestamp
            obj: <class 'pandas._libs.tslibs.timestamps.Timestamp'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cgt_calculator.py>
            name: pytest
            obj: <module 'pytest' from '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cgt_calculator.py>
            name: MockCGTCalculator
            obj: <class 'test.mock_cgt_calculator.MockCGTCalculator'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cgt_calculator.py>
            name: path_to_csv
            obj: <function path_to_csv at 0x11a2b3af0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cgt_calculator.py>
            name: test_cgt_calculator
            obj: <function test_cgt_calculator at 0x11a2b3c10>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x1087bdca0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_cgt_calculator>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cgt_calculator.py>
            name: TEST_RESULT
            obj: {np.int64(2019): {'buy_and_sell_pairs': {}, 'total_capital_gain': 0.0, 'capital_gain_discount': 0.0, 'losses': 0.0, 'short_sell_gain': 0, 'taxable_capital_gain': 0.0}, np.int64(2020): {'buy_and_sell_pairs': {'FLT': [(None, Timestamp('2020-06-25 00:00:00'), np.float64(196.0), 11.832849162011172), (Timestamp('2020-03-19 00:00:00'), Timestamp('2020-06-25 00:00:00'), 341.0, -2.2109924802175662)], 'NAB': [(None, Timestamp('2020-06-29 00:00:00'), np.float64(176.0), 17.87271028037383), (Timestamp('2020-03-23 00:00:00'), Timestamp('2020-06-29 00:00:00'), 359.0, 3.7171392497331617)], 'NVDA': [(Timestamp('2019-05-30 00:00:00'), Timestamp('2020-01-21 00:00:00'), 1920.0, 3.9032864583333344)], 'QAN': [(Timestamp('2020-04-21 00:00:00'), Timestamp('2020-04-21 00:00:00'), 1329.0, -0.15249811888638076)], 'TSLA': [(Timestamp('2019-05-30 00:00:00'), Timestamp('2019-10-28 00:00:00'), 1065.0, 13.46892018779343)], 'WEB': [(None, Timestamp('2020-04-14 00:00:00'), 1400.0, 2.6693214285714286), (None, Timestamp('2020-04-15 00:00:00'), np.float64(1145.0), 2.767100436681223), (Timestamp('2020-03-18 00:00:00'), Timestamp('2020-06-25 00:00:00'), 2545.0, -0.4756777996070727)]}, 'total_capital_gain': np.float64(23173.16299065421), 'capital_gain_discount': np.float64(0.0), 'losses': np.float64(2167.21843575419), 'short_sell_gain': np.float64(12370.215445099984), 'taxable_capital_gain': np.float64(33376.16)}, np.int64(2021): {'buy_and_sell_pairs': {'CCL': [(Timestamp('2020-03-23 00:00:00'), Timestamp('2020-10-29 00:00:00'), 380.0, -1.7070000000000007)], 'SYD': [(Timestamp('2020-03-19 00:00:00'), Timestamp('2020-08-05 00:00:00'), 1017.0, 0.29568338249754245)]}, 'total_capital_gain': np.float64(300.71000000000066), 'capital_gain_discount': np.float64(0.0), 'losses': np.float64(648.6600000000003), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(-347.94999999999965)}, np.int64(2022): {'buy_and_sell_pairs': {'AAPL': [(Timestamp('2021-01-19 00:00:00'), Timestamp('2022-06-01 00:00:00'), 49.0, 37.947551020408184)], 'AIR': [(Timestamp('2020-03-23 00:00:00'), Timestamp('2022-06-01 00:00:00'), 46.0, 56.719999999999985)], 'AIZ': [(Timestamp('2020-03-23 00:00:00'), Timestamp('2021-08-20 00:00:00'), 5796.0, 0.49897860593512755)], 'BRBY': [(Timestamp('2020-03-23 00:00:00'), Timestamp('2022-06-01 00:00:00'), 450.0, 7.679777777777776)], 'GOOGL': [(Timestamp('2020-08-05 00:00:00'), Timestamp('2022-06-01 00:00:00'), 4.0, 1088.5)], 'IMAX': [(Timestamp('2020-03-31 00:00:00'), Timestamp('2022-06-02 00:00:00'), 329.0, 9.238206686930093)], 'MGM': [(Timestamp('2020-03-31 00:00:00'), Timestamp('2022-06-01 00:00:00'), 355.0, 28.53307042253521)], 'QQQ': [(Timestamp('2022-01-25 00:00:00'), Timestamp('2022-06-02 00:00:00'), 10.0, -73.02842857142855), (Timestamp('2021-09-29 00:00:00'), Timestamp('2022-06-02 00:00:00'), 20.0, -88.49442857142856), (Timestamp('2020-08-05 00:00:00'), Timestamp('2022-06-02 00:00:00'), 5.0, 40.598571428571404)]}, 'total_capital_gain': np.float64(28542.132857142857), 'capital_gain_discount': np.float64(14271.066428571428), 'losses': np.float64(2500.1728571428566), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(11770.893571428573)}, np.int64(2023): {'buy_and_sell_pairs': {'GOOG': [(Timestamp('2020-04-15 00:00:00'), Timestamp('2023-02-21 00:00:00'), 60.0, 33.02956666666665), (Timestamp('2020-03-23 00:00:00'), Timestamp('2023-02-21 00:00:00'), 40.0, 40.77489999999999), (Timestamp('2022-06-13 00:00:00'), Timestamp('2023-02-21 00:00:00'), 60.0, -21.996499999999997), (Timestamp('2020-03-23 00:00:00'), Timestamp('2023-02-21 00:00:00'), 40.0, 40.944)], 'META': [(Timestamp('2022-04-06 00:00:00'), Timestamp('2023-02-22 00:00:00'), 33.0, -55.33757575757579)], 'NCLH': [(Timestamp('2020-03-18 00:00:00'), Timestamp('2023-02-21 00:00:00'), 295.0, 7.593898305084746)], 'NVDA': [(Timestamp('2020-11-10 00:00:00'), Timestamp('2023-02-21 00:00:00'), 280.0, 11.254357142857138)], 'QQQ': [(Timestamp('2022-06-06 00:00:00'), Timestamp('2023-02-21 00:00:00'), 50.0, -6.099900000000048), (Timestamp('2020-08-05 00:00:00'), Timestamp('2023-02-21 00:00:00'), 6.0, 47.754899999999964), (Timestamp('2020-04-15 00:00:00'), Timestamp('2023-02-21 00:00:00'), 44.0, 91.9689909090909), (Timestamp('2022-10-11 00:00:00'), Timestamp('2023-02-21 00:00:00'), 39.0, 0.07791666666668107), (Timestamp('2022-07-05 00:00:00'), Timestamp('2023-02-21 00:00:00'), 35.0, 10.417726190476174), (Timestamp('2022-06-13 00:00:00'), Timestamp('2023-02-21 00:00:00'), 30.0, 20.351249999999936), (Timestamp('2020-08-05 00:00:00'), Timestamp('2023-02-21 00:00:00'), 14.0, 47.66458333333327), (Timestamp('2020-04-07 00:00:00'), Timestamp('2023-02-21 00:00:00'), 2.0, 97.26870098039211)], 'RCL': [(Timestamp('2020-03-18 00:00:00'), Timestamp('2023-02-21 00:00:00'), 108.0, 59.67805555555556)], 'TEAM': [(Timestamp('2020-04-03 00:00:00'), Timestamp('2023-02-21 00:00:00'), 33.0, 20.671212121212136)]}, 'total_capital_gain': np.float64(23942.533235294115), 'capital_gain_discount': np.float64(11482.168284313724), 'losses': np.float64(3450.925000000004), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(9009.439950980384)}, np.int64(2024): {'buy_and_sell_pairs': {'TQQQ': [(Timestamp('2022-06-13 00:00:00'), Timestamp('2024-01-29 00:00:00'), 55.0, 48.45238666666666), (Timestamp('2022-06-06 00:00:00'), Timestamp('2024-01-29 00:00:00'), 200.0, 36.76092), (Timestamp('2022-04-05 00:00:00'), Timestamp('2024-01-29 00:00:00'), 245.0, 3.333924081632645)]}, 'total_capital_gain': np.float64(10833.876666666665), 'capital_gain_discount': np.float64(5416.938333333333), 'losses': np.float64(0.0), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(5416.938333333333)}, np.int64(2025): {'buy_and_sell_pairs': {'AMZN': [(Timestamp('2020-11-09 00:00:00'), Timestamp('2025-06-17 00:00:00'), 40.0, 106.38550000000001)], 'HOOD': [(Timestamp('2021-08-20 00:00:00'), Timestamp('2025-06-17 00:00:00'), 80.0, 51.786125)], 'MSFT': [(Timestamp('2021-09-30 00:00:00'), Timestamp('2025-06-17 00:00:00'), 12.0, 321.9716666666667)], 'PLTR': [(Timestamp('2020-11-09 00:00:00'), Timestamp('2024-12-17 00:00:00'), 500.0, 95.67854)]}, 'total_capital_gain': np.float64(60101.24), 'capital_gain_discount': np.float64(30050.62), 'losses': np.float64(0.0), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(30050.62)}}
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'test/test_cgt_calculator.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_cgt_calculator> [collection]
      pytest_itemcollected [hook]
          item: <Function test_cgt_calculator>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test/test_cgt_calculator.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x1057dafd0>
          items: [<Function test_cgt_calculator>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x1057dafd0>
            items: [<Function test_cgt_calculator>]
            start_path: /Users/maxsocha/Documents/Personal Projects/CGT Calculator
            startdir: /Users/maxsocha/Documents/Personal Projects/CGT Calculator
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : NotOpenSSLWarning("urllib3 v2 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'LibreSSL 2.8.3'. See: https://github.com/urllib3/urllib3/issues/3020"), category : 'NotOpenSSLWarning', filename : '/Users/maxsocha/Library/Python/3.9/lib/python/site-packages/urllib3/__init__.py', lineno : 35, line : None}
          nodeid: 
          when: collect
          location: None
      finish pytest_warning_recorded --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=1>
      pytest_runtest_protocol [hook]
          item: <Function test_cgt_calculator>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: test/test_cgt_calculator.py::test_cgt_calculator
            location: ('test/test_cgt_calculator.py', 12, 'test_cgt_calculator')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_cgt_calculator>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='path_to_csv' scope='function' baseid='test/test_cgt_calculator.py'>
              request: <SubRequest 'path_to_csv' for <Function test_cgt_calculator>>
          finish pytest_fixture_setup --> /Users/maxsocha/Documents/Personal Projects/CGT Calculator/test/trade_history_test.csv [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cgt_calculator>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'test/test_cgt_calculator.py::test_cgt_calculator' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test/test_cgt_calculator.py::test_cgt_calculator' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test/test_cgt_calculator.py::test_cgt_calculator' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x1057dafd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_cgt_calculator>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_cgt_calculator>
          early skip of rewriting module: zstandard [assertion]
            pytest_assertrepr_compare [hook]
                config: <_pytest.config.Config object at 0x1057dafd0>
                op: ==
                left: {np.int64(2019): {'buy_and_sell_pairs': {}, 'total_capital_gain': 0.0, 'capital_gain_discount': 0.0, 'loss': 0.0, 'short_sell_gain': 0, 'taxable_capital_gain': 0.0}, np.int64(2020): {'buy_and_sell_pairs': {'FLT': [(None, Timestamp('2020-06-25 00:00:00'), np.float64(196.0), 11.832849162011172), (Timestamp('2020-03-19 00:00:00'), Timestamp('2020-06-25 00:00:00'), 341, -2.2109924802175662)], 'NAB': [(None, Timestamp('2020-06-29 00:00:00'), np.float64(176.0), 17.87271028037383), (Timestamp('2020-03-23 00:00:00'), Timestamp('2020-06-29 00:00:00'), 359, 3.7171392497331617)], 'NVDA': [(Timestamp('2019-05-30 00:00:00'), Timestamp('2020-01-21 00:00:00'), 1920, 3.9032864583333344)], 'QAN': [(Timestamp('2020-04-21 00:00:00'), Timestamp('2020-04-21 00:00:00'), 1329, -0.15249811888638076)], 'TSLA': [(Timestamp('2019-05-30 00:00:00'), Timestamp('2019-10-28 00:00:00'), 1065, 13.46892018779343)], 'WEB': [(None, Timestamp('2020-04-14 00:00:00'), 1400.0, 2.6693214285714286), (None, Timestamp('2020-04-15 00:00:00'), np.float64(1145.0), 2.767100436681223), (Timestamp('2020-03-18 00:00:00'), Timestamp('2020-06-25 00:00:00'), 2545, -0.4756777996070727)]}, 'total_capital_gain': np.float64(23173.16299065421), 'capital_gain_discount': np.float64(0.0), 'loss': np.float64(2167.21843575419), 'short_sell_gain': np.float64(12370.215445099984), 'taxable_capital_gain': np.float64(33376.16)}, np.int64(2021): {'buy_and_sell_pairs': {'CCL': [(Timestamp('2020-03-23 00:00:00'), Timestamp('2020-10-29 00:00:00'), 380, -1.7070000000000007)], 'SYD': [(Timestamp('2020-03-19 00:00:00'), Timestamp('2020-08-05 00:00:00'), 1017, 0.29568338249754245)]}, 'total_capital_gain': np.float64(300.71000000000066), 'capital_gain_discount': np.float64(0.0), 'loss': np.float64(648.6600000000003), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(-347.94999999999965)}, np.int64(2022): {'buy_and_sell_pairs': {'AAPL': [(Timestamp('2021-01-19 00:00:00'), Timestamp('2022-06-01 00:00:00'), 49, 37.947551020408184)], 'AIR': [(Timestamp('2020-03-23 00:00:00'), Timestamp('2022-06-01 00:00:00'), 46, 56.719999999999985)], 'AIZ': [(Timestamp('2020-03-23 00:00:00'), Timestamp('2021-08-20 00:00:00'), 5796, 0.49897860593512755)], 'BRBY': [(Timestamp('2020-03-23 00:00:00'), Timestamp('2022-06-01 00:00:00'), 450, 7.679777777777776)], 'GOOGL': [(Timestamp('2020-08-05 00:00:00'), Timestamp('2022-06-01 00:00:00'), 4, 1088.5)], 'IMAX': [(Timestamp('2020-03-31 00:00:00'), Timestamp('2022-06-02 00:00:00'), 329, 9.238206686930093)], 'MGM': [(Timestamp('2020-03-31 00:00:00'), Timestamp('2022-06-01 00:00:00'), 355, 28.53307042253521)], 'QQQ': [(Timestamp('2022-01-25 00:00:00'), Timestamp('2022-06-02 00:00:00'), 10, -73.02842857142855), (Timestamp('2021-09-29 00:00:00'), Timestamp('2022-06-02 00:00:00'), 20, -88.49442857142856), (Timestamp('2020-08-05 00:00:00'), Timestamp('2022-06-02 00:00:00'), 5, 40.598571428571404)]}, 'total_capital_gain': np.float64(28542.132857142857), 'capital_gain_discount': np.float64(14271.066428571428), 'loss': np.float64(2500.1728571428566), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(11770.893571428573)}, np.int64(2023): {'buy_and_sell_pairs': {'GOOG': [(Timestamp('2020-04-15 00:00:00'), Timestamp('2023-02-21 00:00:00'), 60, 33.02956666666665), (Timestamp('2020-03-23 00:00:00'), Timestamp('2023-02-21 00:00:00'), 40, 40.77489999999999), (Timestamp('2022-06-13 00:00:00'), Timestamp('2023-02-21 00:00:00'), 60, -21.996499999999997), (Timestamp('2020-03-23 00:00:00'), Timestamp('2023-02-21 00:00:00'), 40, 40.944)], 'META': [(Timestamp('2022-04-06 00:00:00'), Timestamp('2023-02-22 00:00:00'), 33, -55.33757575757579)], 'NCLH': [(Timestamp('2020-03-18 00:00:00'), Timestamp('2023-02-21 00:00:00'), 295, 7.593898305084746)], 'NVDA': [(Timestamp('2020-11-10 00:00:00'), Timestamp('2023-02-21 00:00:00'), 280, 11.254357142857138)], 'QQQ': [(Timestamp('2022-06-06 00:00:00'), Timestamp('2023-02-21 00:00:00'), 50, -6.099900000000048), (Timestamp('2020-08-05 00:00:00'), Timestamp('2023-02-21 00:00:00'), 6, 47.754899999999964), (Timestamp('2020-04-15 00:00:00'), Timestamp('2023-02-21 00:00:00'), 44, 91.9689909090909), (Timestamp('2022-10-11 00:00:00'), Timestamp('2023-02-21 00:00:00'), 39, 0.07791666666668107), (Timestamp('2022-07-05 00:00:00'), Timestamp('2023-02-21 00:00:00'), 35, 10.417726190476174), (Timestamp('2022-06-13 00:00:00'), Timestamp('2023-02-21 00:00:00'), 30, 20.351249999999936), (Timestamp('2020-08-05 00:00:00'), Timestamp('2023-02-21 00:00:00'), 14, 47.66458333333327), (Timestamp('2020-04-07 00:00:00'), Timestamp('2023-02-21 00:00:00'), 2, 97.26870098039211)], 'RCL': [(Timestamp('2020-03-18 00:00:00'), Timestamp('2023-02-21 00:00:00'), 108, 59.67805555555556)], 'TEAM': [(Timestamp('2020-04-03 00:00:00'), Timestamp('2023-02-21 00:00:00'), 33, 20.671212121212136)]}, 'total_capital_gain': np.float64(23942.533235294115), 'capital_gain_discount': np.float64(11482.168284313724), 'loss': np.float64(3450.925000000004), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(9009.439950980384)}, np.int64(2024): {'buy_and_sell_pairs': {'TQQQ': [(Timestamp('2022-06-13 00:00:00'), Timestamp('2024-01-29 00:00:00'), 55, 48.45238666666666), (Timestamp('2022-06-06 00:00:00'), Timestamp('2024-01-29 00:00:00'), 200, 36.76092), (Timestamp('2022-04-05 00:00:00'), Timestamp('2024-01-29 00:00:00'), 245, 3.333924081632645)]}, 'total_capital_gain': np.float64(10833.876666666665), 'capital_gain_discount': np.float64(5416.938333333333), 'loss': np.float64(0.0), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(5416.938333333333)}, np.int64(2025): {'buy_and_sell_pairs': {'AMZN': [(Timestamp('2020-11-09 00:00:00'), Timestamp('2025-06-17 00:00:00'), 40, 106.38550000000001)], 'HOOD': [(Timestamp('2021-08-20 00:00:00'), Timestamp('2025-06-17 00:00:00'), 80, 51.786125)], 'MSFT': [(Timestamp('2021-09-30 00:00:00'), Timestamp('2025-06-17 00:00:00'), 12, 321.9716666666667)], 'PLTR': [(Timestamp('2020-11-09 00:00:00'), Timestamp('2024-12-17 00:00:00'), 500, 95.67854)]}, 'total_capital_gain': np.float64(60101.24), 'capital_gain_discount': np.float64(30050.62), 'loss': np.float64(0.0), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(30050.62)}}
                right: {np.int64(2019): {'buy_and_sell_pairs': {}, 'total_capital_gain': 0.0, 'capital_gain_discount': 0.0, 'losses': 0.0, 'short_sell_gain': 0, 'taxable_capital_gain': 0.0}, np.int64(2020): {'buy_and_sell_pairs': {'FLT': [(None, Timestamp('2020-06-25 00:00:00'), np.float64(196.0), 11.832849162011172), (Timestamp('2020-03-19 00:00:00'), Timestamp('2020-06-25 00:00:00'), 341.0, -2.2109924802175662)], 'NAB': [(None, Timestamp('2020-06-29 00:00:00'), np.float64(176.0), 17.87271028037383), (Timestamp('2020-03-23 00:00:00'), Timestamp('2020-06-29 00:00:00'), 359.0, 3.7171392497331617)], 'NVDA': [(Timestamp('2019-05-30 00:00:00'), Timestamp('2020-01-21 00:00:00'), 1920.0, 3.9032864583333344)], 'QAN': [(Timestamp('2020-04-21 00:00:00'), Timestamp('2020-04-21 00:00:00'), 1329.0, -0.15249811888638076)], 'TSLA': [(Timestamp('2019-05-30 00:00:00'), Timestamp('2019-10-28 00:00:00'), 1065.0, 13.46892018779343)], 'WEB': [(None, Timestamp('2020-04-14 00:00:00'), 1400.0, 2.6693214285714286), (None, Timestamp('2020-04-15 00:00:00'), np.float64(1145.0), 2.767100436681223), (Timestamp('2020-03-18 00:00:00'), Timestamp('2020-06-25 00:00:00'), 2545.0, -0.4756777996070727)]}, 'total_capital_gain': np.float64(23173.16299065421), 'capital_gain_discount': np.float64(0.0), 'losses': np.float64(2167.21843575419), 'short_sell_gain': np.float64(12370.215445099984), 'taxable_capital_gain': np.float64(33376.16)}, np.int64(2021): {'buy_and_sell_pairs': {'CCL': [(Timestamp('2020-03-23 00:00:00'), Timestamp('2020-10-29 00:00:00'), 380.0, -1.7070000000000007)], 'SYD': [(Timestamp('2020-03-19 00:00:00'), Timestamp('2020-08-05 00:00:00'), 1017.0, 0.29568338249754245)]}, 'total_capital_gain': np.float64(300.71000000000066), 'capital_gain_discount': np.float64(0.0), 'losses': np.float64(648.6600000000003), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(-347.94999999999965)}, np.int64(2022): {'buy_and_sell_pairs': {'AAPL': [(Timestamp('2021-01-19 00:00:00'), Timestamp('2022-06-01 00:00:00'), 49.0, 37.947551020408184)], 'AIR': [(Timestamp('2020-03-23 00:00:00'), Timestamp('2022-06-01 00:00:00'), 46.0, 56.719999999999985)], 'AIZ': [(Timestamp('2020-03-23 00:00:00'), Timestamp('2021-08-20 00:00:00'), 5796.0, 0.49897860593512755)], 'BRBY': [(Timestamp('2020-03-23 00:00:00'), Timestamp('2022-06-01 00:00:00'), 450.0, 7.679777777777776)], 'GOOGL': [(Timestamp('2020-08-05 00:00:00'), Timestamp('2022-06-01 00:00:00'), 4.0, 1088.5)], 'IMAX': [(Timestamp('2020-03-31 00:00:00'), Timestamp('2022-06-02 00:00:00'), 329.0, 9.238206686930093)], 'MGM': [(Timestamp('2020-03-31 00:00:00'), Timestamp('2022-06-01 00:00:00'), 355.0, 28.53307042253521)], 'QQQ': [(Timestamp('2022-01-25 00:00:00'), Timestamp('2022-06-02 00:00:00'), 10.0, -73.02842857142855), (Timestamp('2021-09-29 00:00:00'), Timestamp('2022-06-02 00:00:00'), 20.0, -88.49442857142856), (Timestamp('2020-08-05 00:00:00'), Timestamp('2022-06-02 00:00:00'), 5.0, 40.598571428571404)]}, 'total_capital_gain': np.float64(28542.132857142857), 'capital_gain_discount': np.float64(14271.066428571428), 'losses': np.float64(2500.1728571428566), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(11770.893571428573)}, np.int64(2023): {'buy_and_sell_pairs': {'GOOG': [(Timestamp('2020-04-15 00:00:00'), Timestamp('2023-02-21 00:00:00'), 60.0, 33.02956666666665), (Timestamp('2020-03-23 00:00:00'), Timestamp('2023-02-21 00:00:00'), 40.0, 40.77489999999999), (Timestamp('2022-06-13 00:00:00'), Timestamp('2023-02-21 00:00:00'), 60.0, -21.996499999999997), (Timestamp('2020-03-23 00:00:00'), Timestamp('2023-02-21 00:00:00'), 40.0, 40.944)], 'META': [(Timestamp('2022-04-06 00:00:00'), Timestamp('2023-02-22 00:00:00'), 33.0, -55.33757575757579)], 'NCLH': [(Timestamp('2020-03-18 00:00:00'), Timestamp('2023-02-21 00:00:00'), 295.0, 7.593898305084746)], 'NVDA': [(Timestamp('2020-11-10 00:00:00'), Timestamp('2023-02-21 00:00:00'), 280.0, 11.254357142857138)], 'QQQ': [(Timestamp('2022-06-06 00:00:00'), Timestamp('2023-02-21 00:00:00'), 50.0, -6.099900000000048), (Timestamp('2020-08-05 00:00:00'), Timestamp('2023-02-21 00:00:00'), 6.0, 47.754899999999964), (Timestamp('2020-04-15 00:00:00'), Timestamp('2023-02-21 00:00:00'), 44.0, 91.9689909090909), (Timestamp('2022-10-11 00:00:00'), Timestamp('2023-02-21 00:00:00'), 39.0, 0.07791666666668107), (Timestamp('2022-07-05 00:00:00'), Timestamp('2023-02-21 00:00:00'), 35.0, 10.417726190476174), (Timestamp('2022-06-13 00:00:00'), Timestamp('2023-02-21 00:00:00'), 30.0, 20.351249999999936), (Timestamp('2020-08-05 00:00:00'), Timestamp('2023-02-21 00:00:00'), 14.0, 47.66458333333327), (Timestamp('2020-04-07 00:00:00'), Timestamp('2023-02-21 00:00:00'), 2.0, 97.26870098039211)], 'RCL': [(Timestamp('2020-03-18 00:00:00'), Timestamp('2023-02-21 00:00:00'), 108.0, 59.67805555555556)], 'TEAM': [(Timestamp('2020-04-03 00:00:00'), Timestamp('2023-02-21 00:00:00'), 33.0, 20.671212121212136)]}, 'total_capital_gain': np.float64(23942.533235294115), 'capital_gain_discount': np.float64(11482.168284313724), 'losses': np.float64(3450.925000000004), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(9009.439950980384)}, np.int64(2024): {'buy_and_sell_pairs': {'TQQQ': [(Timestamp('2022-06-13 00:00:00'), Timestamp('2024-01-29 00:00:00'), 55.0, 48.45238666666666), (Timestamp('2022-06-06 00:00:00'), Timestamp('2024-01-29 00:00:00'), 200.0, 36.76092), (Timestamp('2022-04-05 00:00:00'), Timestamp('2024-01-29 00:00:00'), 245.0, 3.333924081632645)]}, 'total_capital_gain': np.float64(10833.876666666665), 'capital_gain_discount': np.float64(5416.938333333333), 'losses': np.float64(0.0), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(5416.938333333333)}, np.int64(2025): {'buy_and_sell_pairs': {'AMZN': [(Timestamp('2020-11-09 00:00:00'), Timestamp('2025-06-17 00:00:00'), 40.0, 106.38550000000001)], 'HOOD': [(Timestamp('2021-08-20 00:00:00'), Timestamp('2025-06-17 00:00:00'), 80.0, 51.786125)], 'MSFT': [(Timestamp('2021-09-30 00:00:00'), Timestamp('2025-06-17 00:00:00'), 12.0, 321.9716666666667)], 'PLTR': [(Timestamp('2020-11-09 00:00:00'), Timestamp('2024-12-17 00:00:00'), 500.0, 95.67854)]}, 'total_capital_gain': np.float64(60101.24), 'capital_gain_discount': np.float64(30050.62), 'losses': np.float64(0.0), 'short_sell_gain': 0, 'taxable_capital_gain': np.float64(30050.62)}}
            early skip of rewriting module: pygments [assertion]
            early skip of rewriting module: pygments.lexers [assertion]
            early skip of rewriting module: pygments.lexers._mapping [assertion]
            early skip of rewriting module: pygments.modeline [assertion]
            early skip of rewriting module: pygments.plugin [assertion]
            early skip of rewriting module: pygments.util [assertion]
            early skip of rewriting module: pygments.lexers.python [assertion]
            early skip of rewriting module: pygments.lexer [assertion]
            early skip of rewriting module: pygments.filter [assertion]
            early skip of rewriting module: pygments.filters [assertion]
            early skip of rewriting module: pygments.token [assertion]
            early skip of rewriting module: pygments.regexopt [assertion]
            early skip of rewriting module: pygments.unistring [assertion]
            early skip of rewriting module: pygments.formatters [assertion]
            early skip of rewriting module: pygments.formatters._mapping [assertion]
            early skip of rewriting module: pygments.formatters.terminal [assertion]
            early skip of rewriting module: pygments.formatter [assertion]
            early skip of rewriting module: pygments.styles [assertion]
            early skip of rewriting module: pygments.styles._mapping [assertion]
            early skip of rewriting module: pygments.console [assertion]
            finish pytest_assertrepr_compare --> [['{np.int64(201... 0, ...}, ...} == {np.int64(201... 0, ...}, ...}', '', 'Differing items:', "\x1b[0m{np.int64(\x1b[94m2019\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {}, \x1b[33m'\x1b[39;49;00m\x1b[33mcapital_gain_discount\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: \x1b[94m0.0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mloss\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: \x1b[94m0.0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mshort_sell_gain\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: \x1b[94m0\x1b[39;49;00m, ...}}\x1b[90m\x1b[39;49;00m != \x1b[0m{np.int64(\x1b[94m2019\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {}, \x1b[33m'\x1b[39;49;00m\x1b[33mcapital_gain_discount\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: \x1b[94m0.0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mlosses\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: \x1b[94m0.0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mshort_sell_gain\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: \x1b[94m0\x1b[39;49;00m, ...}}\x1b[90m\x1b[39;49;00m", "\x1b[0m{np.int64(\x1b[94m2020\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {\x1b[33m'\x1b[39;49;00m\x1b[33mFLT\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: [(\x1b[94mNone\x1b[39;49;00m, Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2020-06-25 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), np.float64(\x1b[94m196.0\x1b[39;49;00m), \x1b[94m11.832849\x1b[39;49;00m...count\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(0.0), \x1b[39;49;00m\x1b[33m'\x1b[39;49;00mloss\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(2167.21843575419), \x1b[39;49;00m\x1b[33m'\x1b[39;49;00mshort_sell_gain\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(12370.215445099984), ...}}\x1b[39;49;00m\x1b[90m\x1b[39;49;00m != \x1b[0m{np.int64(\x1b[94m2020\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {\x1b[33m'\x1b[39;49;00m\x1b[33mFLT\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: [(\x1b[94mNone\x1b[39;49;00m, Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2020-06-25 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), np.float64(\x1b[94m196.0\x1b[39;49;00m), \x1b[94m11.832849\x1b[39;49;00m...unt\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(0.0), \x1b[39;49;00m\x1b[33m'\x1b[39;49;00mlosses\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(2167.21843575419), \x1b[39;49;00m\x1b[33m'\x1b[39;49;00mshort_sell_gain\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(12370.215445099984), ...}}\x1b[39;49;00m\x1b[90m\x1b[39;49;00m", "\x1b[0m{np.int64(\x1b[94m2021\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {\x1b[33m'\x1b[39;49;00m\x1b[33mCCL\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: [(Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2020-03-23 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2020-10-29 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), ..\x1b[94m.754245\x1b[39;49;00m)]}, \x1b[33m'\x1b[39;49;00m\x1b[33mcapital_gain_discount\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: np.float64(\x1b[94m0.0\x1b[39;49;00m), \x1b[33m'\x1b[39;49;00m\x1b[33mloss\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: np.float64(\x1b[94m648.6600000000003\x1b[39;49;00m), \x1b[33m'\x1b[39;49;00m\x1b[33mshort_sell_gain\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: \x1b[94m0\x1b[39;49;00m, ...}}\x1b[90m\x1b[39;49;00m != \x1b[0m{np.int64(\x1b[94m2021\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {\x1b[33m'\x1b[39;49;00m\x1b[33mCCL\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: [(Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2020-03-23 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2020-10-29 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), ..\x1b[94m.4245\x1b[39;49;00m)]}, \x1b[33m'\x1b[39;49;00m\x1b[33mcapital_gain_discount\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: np.float64(\x1b[94m0.0\x1b[39;49;00m), \x1b[33m'\x1b[39;49;00m\x1b[33mlosses\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: np.float64(\x1b[94m648.6600000000003\x1b[39;49;00m), \x1b[33m'\x1b[39;49;00m\x1b[33mshort_sell_gain\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: \x1b[94m0\x1b[39;49;00m, ...}}\x1b[90m\x1b[39;49;00m", "\x1b[0m{np.int64(\x1b[94m2022\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {\x1b[33m'\x1b[39;49;00m\x1b[33mAAPL\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: [(Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2021-01-19 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2022-06-01 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m),...tal_gain_discount\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(14271.066428571428), \x1b[39;49;00m\x1b[33m'\x1b[39;49;00mloss\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(2500.1728571428566), \x1b[39;49;00m\x1b[33m'\x1b[39;49;00mshort_sell_gain\x1b[33m'\x1b[39;49;00m\x1b[33m: 0, ...}}\x1b[39;49;00m\x1b[90m\x1b[39;49;00m != \x1b[0m{np.int64(\x1b[94m2022\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {\x1b[33m'\x1b[39;49;00m\x1b[33mAAPL\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: [(Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2021-01-19 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2022-06-01 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m),...l_gain_discount\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(14271.066428571428), \x1b[39;49;00m\x1b[33m'\x1b[39;49;00mlosses\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(2500.1728571428566), \x1b[39;49;00m\x1b[33m'\x1b[39;49;00mshort_sell_gain\x1b[33m'\x1b[39;49;00m\x1b[33m: 0, ...}}\x1b[39;49;00m\x1b[90m\x1b[39;49;00m", "\x1b[0m{np.int64(\x1b[94m2023\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {\x1b[33m'\x1b[39;49;00m\x1b[33mGOOG\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: [(Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2020-04-15 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2023-02-21 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m),...ital_gain_discount\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(11482.168284313724), \x1b[39;49;00m\x1b[33m'\x1b[39;49;00mloss\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(3450.925000000004), \x1b[39;49;00m\x1b[33m'\x1b[39;49;00mshort_sell_gain\x1b[33m'\x1b[39;49;00m\x1b[33m: 0, ...}}\x1b[39;49;00m\x1b[90m\x1b[39;49;00m != \x1b[0m{np.int64(\x1b[94m2023\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {\x1b[33m'\x1b[39;49;00m\x1b[33mGOOG\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: [(Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2020-04-15 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2023-02-21 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m),...al_gain_discount\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(11482.168284313724), \x1b[39;49;00m\x1b[33m'\x1b[39;49;00mlosses\x1b[33m'\x1b[39;49;00m\x1b[33m: np.float64(3450.925000000004), \x1b[39;49;00m\x1b[33m'\x1b[39;49;00mshort_sell_gain\x1b[33m'\x1b[39;49;00m\x1b[33m: 0, ...}}\x1b[39;49;00m\x1b[90m\x1b[39;49;00m", "\x1b[0m{np.int64(\x1b[94m2024\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {\x1b[33m'\x1b[39;49;00m\x1b[33mTQQQ\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: [(Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2022-06-13 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2024-01-29 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m),..\x1b[94m.632645\x1b[39;49;00m)]}, \x1b[33m'\x1b[39;49;00m\x1b[33mcapital_gain_discount\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: np.float64(\x1b[94m5416.938333333333\x1b[39;49;00m), \x1b[33m'\x1b[39;49;00m\x1b[33mloss\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: np.float64(\x1b[94m0.0\x1b[39;49;00m), \x1b[33m'\x1b[39;49;00m\x1b[33mshort_sell_gain\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: \x1b[94m0\x1b[39;49;00m, ...}}\x1b[90m\x1b[39;49;00m != \x1b[0m{np.int64(\x1b[94m2024\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {\x1b[33m'\x1b[39;49;00m\x1b[33mTQQQ\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: [(Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2022-06-13 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2024-01-29 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m),..\x1b[94m.2645\x1b[39;49;00m)]}, \x1b[33m'\x1b[39;49;00m\x1b[33mcapital_gain_discount\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: np.float64(\x1b[94m5416.938333333333\x1b[39;49;00m), \x1b[33m'\x1b[39;49;00m\x1b[33mlosses\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: np.float64(\x1b[94m0.0\x1b[39;49;00m), \x1b[33m'\x1b[39;49;00m\x1b[33mshort_sell_gain\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: \x1b[94m0\x1b[39;49;00m, ...}}\x1b[90m\x1b[39;49;00m", "\x1b[0m{np.int64(\x1b[94m2025\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {\x1b[33m'\x1b[39;49;00m\x1b[33mAMZN\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: [(Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2020-11-09 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2025-06-17 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m),..., \x1b[94m500\x1b[39;49;00m, \x1b[94m95.67854\x1b[39;49;00m)]}, \x1b[33m'\x1b[39;49;00m\x1b[33mcapital_gain_discount\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: np.float64(\x1b[94m30050.62\x1b[39;49;00m), \x1b[33m'\x1b[39;49;00m\x1b[33mloss\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: np.float64(\x1b[94m0.0\x1b[39;49;00m), \x1b[33m'\x1b[39;49;00m\x1b[33mshort_sell_gain\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: \x1b[94m0\x1b[39;49;00m, ...}}\x1b[90m\x1b[39;49;00m != \x1b[0m{np.int64(\x1b[94m2025\x1b[39;49;00m): {\x1b[33m'\x1b[39;49;00m\x1b[33mbuy_and_sell_pairs\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: {\x1b[33m'\x1b[39;49;00m\x1b[33mAMZN\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: [(Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2020-11-09 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m), Timestamp(\x1b[33m'\x1b[39;49;00m\x1b[33m2025-06-17 00:00:00\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m),..\x1b[94m.0\x1b[39;49;00m\x1b[94m.0\x1b[39;49;00m, \x1b[94m95.67854\x1b[39;49;00m)]}, \x1b[33m'\x1b[39;49;00m\x1b[33mcapital_gain_discount\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: np.float64(\x1b[94m30050.62\x1b[39;49;00m), \x1b[33m'\x1b[39;49;00m\x1b[33mlosses\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: np.float64(\x1b[94m0.0\x1b[39;49;00m), \x1b[33m'\x1b[39;49;00m\x1b[33mshort_sell_gain\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m: \x1b[94m0\x1b[39;49;00m, ...}}\x1b[90m\x1b[39;49;00m", 'Use -v to get more diff']] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cgt_calculator>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError("assert {np.int64(201... 0, ...}, ...} == {np.int64(201... 0, ...}, ...}\n  \n  Differing items:\n  \x1...00m\x1b[33mcapital_gain_discount\x1b[39;49;00m...\n  \n  ...Full output truncated (8 lines hidden), use '-vv' to show") tblen=35>>
        finish pytest_runtest_makereport --> <TestReport 'test/test_cgt_calculator.py::test_cgt_calculator' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test/test_cgt_calculator.py::test_cgt_calculator' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test/test_cgt_calculator.py::test_cgt_calculator' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x1057dafd0>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_cgt_calculator>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError("assert {np.int64(201... 0, ...}, ...} == {np.int64(201... 0, ...}, ...}\n  \n  Differing items:\n  \x1...00m\x1b[33mcapital_gain_discount\x1b[39;49;00m...\n  \n  ...Full output truncated (8 lines hidden), use '-vv' to show") tblen=35>>
            report: <TestReport 'test/test_cgt_calculator.py::test_cgt_calculator' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_cgt_calculator>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='path_to_csv' scope='function' baseid='test/test_cgt_calculator.py'>
              request: <SubRequest 'path_to_csv' for <Function test_cgt_calculator>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cgt_calculator>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'test/test_cgt_calculator.py::test_cgt_calculator' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test/test_cgt_calculator.py::test_cgt_calculator' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test/test_cgt_calculator.py::test_cgt_calculator' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x1057dafd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test/test_cgt_calculator.py::test_cgt_calculator
            location: ('test/test_cgt_calculator.py', 12, 'test_cgt_calculator')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=1 testscollected=1>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x1058f0bb0>
          exitstatus: 1
          config: <_pytest.config.Config object at 0x1057dafd0>
        pytest_report_teststatus [hook]
            report: <TestReport 'test/test_cgt_calculator.py::test_cgt_calculator' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x1057dafd0>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x1057dafd0>
    finish pytest_unconfigure --> [] [hook]
